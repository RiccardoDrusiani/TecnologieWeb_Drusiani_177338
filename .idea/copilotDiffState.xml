<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/Autosaloon_Modena/apps/Auto/mixin.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Autosaloon_Modena/apps/Auto/mixin.py" />
              <option name="originalContent" value="from django.http import HttpResponseForbidden&#10;&#10;from Autosaloon_Modena.apps.utils import is_possessore_auto&#10;&#10;&#10;class UserIsOwnerMixin:&#10;    def dispatch(self, request, *args, **kwargs):&#10;        obj = self.get_object()&#10;        if not is_possessore_auto(request.user, obj):&#10;            return HttpResponseForbidden(&quot;Non sei il possessore di questa auto.&quot;)&#10;        return super().dispatch(request, *args, **kwargs)&#10;" />
              <option name="updatedContent" value="from django.http import HttpResponseForbidden&#10;&#10;from apps.utils import is_possessore_auto&#10;&#10;&#10;class UserIsOwnerMixin:&#10;    def dispatch(self, request, *args, **kwargs):&#10;        obj = self.get_object()&#10;        if not is_possessore_auto(request.user, obj):&#10;            return HttpResponseForbidden(&quot;Non sei il possessore di questa auto.&quot;)&#10;        return super().dispatch(request, *args, **kwargs)" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/Autosaloon_Modena/apps/Auto/views.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Autosaloon_Modena/apps/Auto/views.py" />
              <option name="originalContent" value="from datetime import timezone, datetime, timedelta&#10;&#10;from django.http import HttpResponse&#10;from django.shortcuts import render, get_object_or_404, redirect&#10;from django.utils.decorators import method_decorator&#10;from django.views.generic import CreateView, DeleteView, UpdateView, DetailView&#10;from django.views.decorators.csrf import csrf_exempt&#10;from django.contrib.auth.decorators import login_required&#10;&#10;from .auto_utils import gestione_vendita_affitto&#10;from .form import AddAutoForm, ModifyAutoForm, AffittoAutoForm, PrenotazioneAutoForm, VenditaAutoForm, ContrattoAutoForm&#10;from .models import Auto, AutoAffitto, AutoVendita, AutoPrenotazione, AutoContrattazione&#10;from ..decorator import user_or_concessionaria_required&#10;from ..utils import user_or_concessionaria, get_success_url_by_possessore, is_possessore_auto&#10;&#10;&#10;&#10;@method_decorator(login_required, name='dispatch')&#10;class AutoAddView(CreateView):&#10;    model = Auto&#10;    template_name = 'Auto/add_auto_template.html'  # Cambiato il template&#10;    form_class = AddAutoForm&#10;&#10;    def form_valid(self, form):&#10;        auto = form.save(commit=False)&#10;        auto.tipologia_possessore, auto.id_possessore = user_or_concessionaria(self.request.user)&#10;        auto.user_auto = self.request.user  # Associa l'utente autenticato&#10;        auto.save()&#10;        prezzo_vendita = form.cleaned_data.get('prezzo_vendita')&#10;        prezzo_affitto = form.cleaned_data.get('prezzo_affitto')&#10;        if prezzo_vendita:&#10;            AutoVendita.objects.create(auto=auto, prezzo_vendita=prezzo_vendita, venditore=auto.id_possessore)&#10;        if prezzo_affitto:&#10;            AutoAffitto.objects.create(auto=auto, prezzo_affitto=prezzo_affitto, affittante_id=auto.id_possessore, affittante_tipologia=auto.tipologia_possessore)&#10;        return super().form_valid(form)&#10;&#10;    def form_invalid(self, form):&#10;        return render(self.request, self.template_name, {'form': form})&#10;&#10;    def get_success_url(self):&#10;        return get_success_url_by_possessore(self.request)&#10;&#10;&#10;&#10;@method_decorator(login_required, name='dispatch')&#10;class AutoDeleteView(DeleteView):&#10;    model = Auto&#10;    template_name = 'Autosalone/confirm_delete_popup.html'&#10;&#10;    def delete(self, request, *args, **kwargs):&#10;        auto = self.get_object()&#10;        # Verifica se l'utente è il possessore dell'auto&#10;        print(f&quot;Utente: {self.request.user}, Auto: {auto}&quot;)&#10;        if is_possessore_auto(self.request.user, auto):&#10;            print(is_possessore_auto(self.request.user, auto))&#10;            print(&quot;Utente autorizzato a eliminare l'auto.&quot;)&#10;            # Elimina le istanze collegate in AutoVendita e AutoAffitto&#10;            AutoVendita.objects.filter(auto=auto).delete()&#10;            AutoAffitto.objects.filter(auto=auto).delete()&#10;            return super().delete(request, *args, **kwargs)&#10;        else:&#10;            print(&quot;Tentativo di eliminazione da parte di un utente non autorizzato.&quot;)&#10;            # Restituisce un messaggio di errore se l'utente non è il possessore&#10;            return HttpResponse(&quot;Non sei il possessore di questa auto.&quot;, status=403)&#10;&#10;    def get_success_url(self):&#10;        return get_success_url_by_possessore(self.request)&#10;&#10;&#10;&#10;@method_decorator(login_required, name='dispatch')&#10;class AutoModifyView(UpdateView):&#10;    model = Auto&#10;    template_name = 'Auto/modify_auto.html'&#10;    form_class = ModifyAutoForm&#10;&#10;    def form_valid(self, form):&#10;        auto = form.save(commit=False)&#10;        auto.tipologia_possessore, auto.id_possessore = user_or_concessionaria(self.request.user)&#10;        if is_possessore_auto(auto.tipologia_possessore, auto.id_possessore, auto.id):&#10;            auto.save()&#10;            # Recupera i valori originali&#10;            original_auto = Auto.objects.get(pk=auto.id)&#10;            original_vendita = AutoVendita.objects.filter(auto=original_auto).first() or None&#10;            original_affitto = AutoAffitto.objects.filter(auto=original_auto).first() or None&#10;            # Nuovi valori dal form&#10;            prezzo_vendita = form.cleaned_data.get('prezzo_vendita')&#10;            prezzo_affitto = form.cleaned_data.get('prezzo_affitto')&#10;            # Gestione della logica di vendita e affitto&#10;            gestione_vendita_affitto(prezzo_vendita, prezzo_affitto, original_auto, original_vendita, original_affitto)&#10;            return super().form_valid(form)&#10;        else:&#10;            return HttpResponse(&quot;Non sei il possessore di questa auto.&quot;, status=403)&#10;&#10;    def form_invalid(self, form):&#10;        return render(self.request, self.template_name, {'form': form, 'auto': self.get_object()})&#10;&#10;    def get_success_url(self):&#10;        return get_success_url_by_possessore(self.request)&#10;&#10;&#10;&#10;@method_decorator(login_required, name='dispatch')&#10;class AutoAffittoView(UpdateView):&#10;    model = AutoAffitto&#10;    form_class = AffittoAutoForm&#10;    template_name = 'Auto/affitto_auto.html'&#10;&#10;    def form_valid(self, form):&#10;        affitto = form.save(commit=False)&#10;        affitto.auto = self.get_object()&#10;        affitto.affittuario_id, affitto.affittuario_tipologia = user_or_concessionaria(self.request.user)&#10;        affitto.save()&#10;        return super().form_valid(form)&#10;&#10;    def form_invalid(self, form):&#10;        return render(self.request, self.template_name, {'form': form, 'auto': self.get_object()})&#10;&#10;    def get_success_url(self):&#10;        return get_success_url_by_possessore(self.request)&#10;&#10;&#10;&#10;@method_decorator(login_required, name='dispatch')&#10;class AutoAcquistoView(UpdateView):&#10;    model = AutoVendita&#10;    form_class = VenditaAutoForm  # Assuming the same form is used for both&#10;    template_name = 'Auto/acquisto_auto.html'&#10;&#10;    def form_valid(self, form):&#10;        vendita = form.save(commit=False)&#10;        vendita.auto = self.get_object()&#10;        vendita.venditore = self.request.user&#10;        vendita.data_pubblicazione = datetime.now()&#10;        auto = vendita.auto&#10;        auto.tipologia_possessore, auto.id_possessore = user_or_concessionaria(self.request.user)&#10;        auto_affitto = AutoAffitto.objects.filter(auto=auto).first()&#10;        if auto_affitto:&#10;            auto_affitto.affittuario_tipologia, auto_affitto.affittuario_id = user_or_concessionaria(self.request.user)&#10;            auto_affitto.affittante_id, auto_affitto.affittante_tipologia = None, None&#10;        auto_affitto.save()&#10;        auto.save()&#10;        vendita.save()&#10;        return super().form_valid(form)&#10;&#10;    def form_invalid(self, form):&#10;        return render(self.request, self.template_name, {'form': form})&#10;&#10;    def get_success_url(self):&#10;        return get_success_url_by_possessore(self.request)&#10;&#10;&#10;&#10;@method_decorator(login_required, name='dispatch')&#10;class AutoPrenotaView(CreateView):&#10;    model = AutoPrenotazione&#10;    template_name = 'Auto/prenota_auto.html'&#10;    form_class = PrenotazioneAutoForm&#10;&#10;    def form_valid(self, form):&#10;        prenotazione = form.save(commit=False)&#10;        auto = Auto.objects.get(pk=self.kwargs['pk'])&#10;        prenotazione.auto = auto&#10;        prenotazione.data_inizio = datetime.now()&#10;        prenotazione.data_fine = prenotazione.data_inizio + timedelta(hours=24)&#10;        prenotazione.proprietario = auto.id_possessore&#10;        prenotazione.prenotante_id, prenotazione.prenotante_tipologia = user_or_concessionaria(self.request.user)&#10;        prenotazione.save()&#10;        return super().form_valid(form)&#10;&#10;    def form_invalid(self, form):&#10;        return render(self.request, self.template_name, {'form': form})&#10;&#10;    def get_success_url(self):&#10;        return get_success_url_by_possessore(self.request)&#10;&#10;&#10;@method_decorator(login_required, name='dispatch')&#10;class AutoInContrattazioneView(UpdateView):&#10;    model = AutoContrattazione&#10;    template_name = 'Auto/contrattazione_auto.html'&#10;    form_class = ContrattoAutoForm&#10;&#10;    def form_valid(self, form):&#10;        contrattazione = form.save(commit=False)&#10;        auto = Auto.objects.get(pk=self.kwargs['pk'])&#10;        contrattazione.auto = auto&#10;        contrattazione.acquirente_id, contrattazione.acquirente_tipologia = user_or_concessionaria(self.request.user)&#10;        autovendita = AutoVendita.objects.filter(auto=auto).first()&#10;        if autovendita:&#10;            contrattazione.prezzo_iniziale = autovendita.prezzo_vendita&#10;        contrattazione.save()&#10;        return super().form_valid(form)&#10;&#10;    def form_invalid(self, form):&#10;        return render(self.request, self.template_name, {'form': form})&#10;&#10;    def get_success_url(self):&#10;        return get_success_url_by_possessore(self.request)&#10;&#10;&#10;@method_decorator(login_required, name='dispatch')&#10;class AutoFineContrattazioneView(UpdateView):&#10;    model = AutoContrattazione&#10;    template_name = 'Auto/fine_contrattazione_auto.html'&#10;    form_class = ContrattoAutoForm&#10;&#10;    def form_valid(self, form):&#10;        contrattazione = form.save(commit=False)&#10;        contrattazione.prezzo_finale = contrattazione.prezzo_attuale&#10;        contrattazione.data_fine = datetime.now(timezone.utc)&#10;        contrattazione.save()&#10;&#10;        # Trasferimento proprietà auto&#10;        auto = contrattazione.auto&#10;        auto.tipologia_possessore = contrattazione.acquirente_tipologia&#10;        auto.id_possessore = contrattazione.acquirente_id&#10;        auto_affitto = AutoAffitto.objects.filter(auto=auto).first()&#10;        if auto_affitto:&#10;            auto_affitto.affittante_id, auto_affitto.affittante_tipologia = None, None&#10;            auto_affitto.affittuario_id, auto_affitto.affittuario_tipologia = contrattazione.acquirente_id, contrattazione.acquirente_tipologia&#10;            auto_affitto.save()&#10;        auto_vendita = AutoVendita.objects.filter(auto=auto).first()&#10;        if auto_vendita:&#10;            auto_vendita.venditore = contrattazione.venditore_id&#10;            auto_vendita.save()&#10;        auto.save()&#10;        # Rimuovi l'auto dalle vendite&#10;        AutoVendita.objects.filter(auto=auto).delete()&#10;&#10;        return super().form_valid(form)&#10;&#10;    def form_invalid(self, form):&#10;        return render(self.request, self.template_name, {'form': form})&#10;&#10;    def get_success_url(self):&#10;        return get_success_url_by_possessore(self.request)&#10;&#10;class AutoDetailView(DetailView):&#10;    model = Auto&#10;    template_name = 'Auto/auto_detail.html'&#10;    context_object_name = 'auto'&#10;&#10;&#10;@login_required&#10;def user_autos_view(request):&#10;    autos = Auto.objects.filter(user_auto=request.user)&#10;    is_utente = request.user.groups.filter(name='utente').exists()&#10;    is_concessionaria = request.user.groups.filter(name='concessionaria').exists()&#10;    form = AddAutoForm()&#10;    return render(request, 'Auto/user_autos.html', {&#10;        'autos': autos,&#10;        'is_utente': is_utente,&#10;        'is_concessionaria': is_concessionaria,&#10;        'form': form&#10;    })&#10;" />
              <option name="updatedContent" value="from datetime import timezone, datetime, timedelta&#10;&#10;from django.http import HttpResponse, HttpResponseForbidden&#10;from django.shortcuts import render, get_object_or_404, redirect&#10;from django.utils.decorators import method_decorator&#10;from django.views.generic import CreateView, DeleteView, UpdateView, DetailView&#10;from django.views.decorators.csrf import csrf_exempt&#10;from django.contrib.auth.decorators import login_required&#10;&#10;from .auto_utils import gestione_vendita_affitto&#10;from .form import AddAutoForm, ModifyAutoForm, AffittoAutoForm, PrenotazioneAutoForm, VenditaAutoForm, ContrattoAutoForm&#10;from .models import Auto, AutoAffitto, AutoVendita, AutoPrenotazione, AutoContrattazione&#10;from ..decorator import user_or_concessionaria_required&#10;from ..utils import user_or_concessionaria, get_success_url_by_possessore, is_possessore_auto&#10;&#10;&#10;&#10;@method_decorator(login_required, name='dispatch')&#10;class AutoAddView(CreateView):&#10;    model = Auto&#10;    template_name = 'Auto/add_auto_template.html'  # Cambiato il template&#10;    form_class = AddAutoForm&#10;&#10;    def form_valid(self, form):&#10;        auto = form.save(commit=False)&#10;        auto.tipologia_possessore, auto.id_possessore = user_or_concessionaria(self.request.user)&#10;        auto.user_auto = self.request.user  # Associa l'utente autenticato&#10;        auto.save()&#10;        prezzo_vendita = form.cleaned_data.get('prezzo_vendita')&#10;        prezzo_affitto = form.cleaned_data.get('prezzo_affitto')&#10;        if prezzo_vendita:&#10;            AutoVendita.objects.create(auto=auto, prezzo_vendita=prezzo_vendita, venditore=auto.id_possessore)&#10;        if prezzo_affitto:&#10;            AutoAffitto.objects.create(auto=auto, prezzo_affitto=prezzo_affitto, affittante_id=auto.id_possessore, affittante_tipologia=auto.tipologia_possessore)&#10;        return super().form_valid(form)&#10;&#10;    def form_invalid(self, form):&#10;        return render(self.request, self.template_name, {'form': form})&#10;&#10;    def get_success_url(self):&#10;        return get_success_url_by_possessore(self.request)&#10;&#10;&#10;&#10;class UserIsOwnerMixin:&#10;    def dispatch(self, request, *args, **kwargs):&#10;        obj = self.get_object()&#10;        if not is_possessore_auto(request.user, obj):&#10;            return HttpResponseForbidden(&quot;Non sei il possessore di questa auto.&quot;)&#10;        return super().dispatch(request, *args, **kwargs)&#10;&#10;&#10;&#10;@method_decorator(login_required, name='dispatch')&#10;class AutoDeleteView(UserIsOwnerMixin, DeleteView):&#10;    model = Auto&#10;    template_name = 'Autosalone/confirm_delete_popup.html'&#10;&#10;    def delete(self, request, *args, **kwargs):&#10;        auto = self.get_object()&#10;        # Elimina le istanze collegate in AutoVendita e AutoAffitto&#10;        AutoVendita.objects.filter(auto=auto).delete()&#10;        AutoAffitto.objects.filter(auto=auto).delete()&#10;        return super().delete(request, *args, **kwargs)&#10;&#10;    def get_success_url(self):&#10;        return get_success_url_by_possessore(self.request)&#10;&#10;&#10;&#10;@method_decorator(login_required, name='dispatch')&#10;class AutoModifyView(UpdateView):&#10;    model = Auto&#10;    template_name = 'Auto/modify_auto.html'&#10;    form_class = ModifyAutoForm&#10;&#10;    def form_valid(self, form):&#10;        auto = form.save(commit=False)&#10;        auto.tipologia_possessore, auto.id_possessore = user_or_concessionaria(self.request.user)&#10;        if is_possessore_auto(auto.tipologia_possessore, auto.id_possessore, auto.id):&#10;            auto.save()&#10;            # Recupera i valori originali&#10;            original_auto = Auto.objects.get(pk=auto.id)&#10;            original_vendita = AutoVendita.objects.filter(auto=original_auto).first() or None&#10;            original_affitto = AutoAffitto.objects.filter(auto=original_auto).first() or None&#10;            # Nuovi valori dal form&#10;            prezzo_vendita = form.cleaned_data.get('prezzo_vendita')&#10;            prezzo_affitto = form.cleaned_data.get('prezzo_affitto')&#10;            # Gestione della logica di vendita e affitto&#10;            gestione_vendita_affitto(prezzo_vendita, prezzo_affitto, original_auto, original_vendita, original_affitto)&#10;            return super().form_valid(form)&#10;        else:&#10;            return HttpResponse(&quot;Non sei il possessore di questa auto.&quot;, status=403)&#10;&#10;    def form_invalid(self, form):&#10;        return render(self.request, self.template_name, {'form': form, 'auto': self.get_object()})&#10;&#10;    def get_success_url(self):&#10;        return get_success_url_by_possessore(self.request)&#10;&#10;&#10;&#10;@method_decorator(login_required, name='dispatch')&#10;class AutoAffittoView(UpdateView):&#10;    model = AutoAffitto&#10;    form_class = AffittoAutoForm&#10;    template_name = 'Auto/affitto_auto.html'&#10;&#10;    def form_valid(self, form):&#10;        affitto = form.save(commit=False)&#10;        affitto.auto = self.get_object()&#10;        affitto.affittuario_id, affitto.affittuario_tipologia = user_or_concessionaria(self.request.user)&#10;        affitto.save()&#10;        return super().form_valid(form)&#10;&#10;    def form_invalid(self, form):&#10;        return render(self.request, self.template_name, {'form': form, 'auto': self.get_object()})&#10;&#10;    def get_success_url(self):&#10;        return get_success_url_by_possessore(self.request)&#10;&#10;&#10;&#10;@method_decorator(login_required, name='dispatch')&#10;class AutoAcquistoView(UpdateView):&#10;    model = AutoVendita&#10;    form_class = VenditaAutoForm  # Assuming the same form is used for both&#10;    template_name = 'Auto/acquisto_auto.html'&#10;&#10;    def form_valid(self, form):&#10;        vendita = form.save(commit=False)&#10;        vendita.auto = self.get_object()&#10;        vendita.venditore = self.request.user&#10;        vendita.data_pubblicazione = datetime.now()&#10;        auto = vendita.auto&#10;        auto.tipologia_possessore, auto.id_possessore = user_or_concessionaria(self.request.user)&#10;        auto_affitto = AutoAffitto.objects.filter(auto=auto).first()&#10;        if auto_affitto:&#10;            auto_affitto.affittuario_tipologia, auto_affitto.affittuario_id = user_or_concessionaria(self.request.user)&#10;            auto_affitto.affittante_id, auto_affitto.affittante_tipologia = None, None&#10;        auto_affitto.save()&#10;        auto.save()&#10;        vendita.save()&#10;        return super().form_valid(form)&#10;&#10;    def form_invalid(self, form):&#10;        return render(self.request, self.template_name, {'form': form})&#10;&#10;    def get_success_url(self):&#10;        return get_success_url_by_possessore(self.request)&#10;&#10;&#10;&#10;@method_decorator(login_required, name='dispatch')&#10;class AutoPrenotaView(CreateView):&#10;    model = AutoPrenotazione&#10;    template_name = 'Auto/prenota_auto.html'&#10;    form_class = PrenotazioneAutoForm&#10;&#10;    def form_valid(self, form):&#10;        prenotazione = form.save(commit=False)&#10;        auto = Auto.objects.get(pk=self.kwargs['pk'])&#10;        prenotazione.auto = auto&#10;        prenotazione.data_inizio = datetime.now()&#10;        prenotazione.data_fine = prenotazione.data_inizio + timedelta(hours=24)&#10;        prenotazione.proprietario = auto.id_possessore&#10;        prenotazione.prenotante_id, prenotazione.prenotante_tipologia = user_or_concessionaria(self.request.user)&#10;        prenotazione.save()&#10;        return super().form_valid(form)&#10;&#10;    def form_invalid(self, form):&#10;        return render(self.request, self.template_name, {'form': form})&#10;&#10;    def get_success_url(self):&#10;        return get_success_url_by_possessore(self.request)&#10;&#10;&#10;@method_decorator(login_required, name='dispatch')&#10;class AutoInContrattazioneView(UpdateView):&#10;    model = AutoContrattazione&#10;    template_name = 'Auto/contrattazione_auto.html'&#10;    form_class = ContrattoAutoForm&#10;&#10;    def form_valid(self, form):&#10;        contrattazione = form.save(commit=False)&#10;        auto = Auto.objects.get(pk=self.kwargs['pk'])&#10;        contrattazione.auto = auto&#10;        contrattazione.acquirente_id, contrattazione.acquirente_tipologia = user_or_concessionaria(self.request.user)&#10;        autovendita = AutoVendita.objects.filter(auto=auto).first()&#10;        if autovendita:&#10;            contrattazione.prezzo_iniziale = autovendita.prezzo_vendita&#10;        contrattazione.save()&#10;        return super().form_valid(form)&#10;&#10;    def form_invalid(self, form):&#10;        return render(self.request, self.template_name, {'form': form})&#10;&#10;    def get_success_url(self):&#10;        return get_success_url_by_possessore(self.request)&#10;&#10;&#10;@method_decorator(login_required, name='dispatch')&#10;class AutoFineContrattazioneView(UpdateView):&#10;    model = AutoContrattazione&#10;    template_name = 'Auto/fine_contrattazione_auto.html'&#10;    form_class = ContrattoAutoForm&#10;&#10;    def form_valid(self, form):&#10;        contrattazione = form.save(commit=False)&#10;        contrattazione.prezzo_finale = contrattazione.prezzo_attuale&#10;        contrattazione.data_fine = datetime.now(timezone.utc)&#10;        contrattazione.save()&#10;&#10;        # Trasferimento proprietà auto&#10;        auto = contrattazione.auto&#10;        auto.tipologia_possessore = contrattazione.acquirente_tipologia&#10;        auto.id_possessore = contrattazione.acquirente_id&#10;        auto_affitto = AutoAffitto.objects.filter(auto=auto).first()&#10;        if auto_affitto:&#10;            auto_affitto.affittante_id, auto_affitto.affittante_tipologia = None, None&#10;            auto_affitto.affittuario_id, auto_affitto.affittuario_tipologia = contrattazione.acquirente_id, contrattazione.acquirente_tipologia&#10;            auto_affitto.save()&#10;        auto_vendita = AutoVendita.objects.filter(auto=auto).first()&#10;        if auto_vendita:&#10;            auto_vendita.venditore = contrattazione.venditore_id&#10;            auto_vendita.save()&#10;        auto.save()&#10;        # Rimuovi l'auto dalle vendite&#10;        AutoVendita.objects.filter(auto=auto).delete()&#10;&#10;        return super().form_valid(form)&#10;&#10;    def form_invalid(self, form):&#10;        return render(self.request, self.template_name, {'form': form})&#10;&#10;    def get_success_url(self):&#10;        return get_success_url_by_possessore(self.request)&#10;&#10;class AutoDetailView(DetailView):&#10;    model = Auto&#10;    template_name = 'Auto/auto_detail.html'&#10;    context_object_name = 'auto'&#10;&#10;&#10;@login_required&#10;def user_autos_view(request):&#10;    autos = Auto.objects.filter(user_auto=request.user)&#10;    is_utente = request.user.groups.filter(name='utente').exists()&#10;    is_concessionaria = request.user.groups.filter(name='concessionaria').exists()&#10;    form = AddAutoForm()&#10;    return render(request, 'Auto/user_autos.html', {&#10;        'autos': autos,&#10;        'is_utente': is_utente,&#10;        'is_concessionaria': is_concessionaria,&#10;        'form': form&#10;    })" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/Autosaloon_Modena/apps/Autosalone/views.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Autosaloon_Modena/apps/Autosalone/views.py" />
              <option name="originalContent" value="from django.shortcuts import render&#10;from django.contrib.contenttypes.models import ContentType&#10;from django.contrib.auth.mixins import LoginRequiredMixin&#10;from django.views.generic import CreateView, ListView, DetailView&#10;from django.urls import reverse_lazy&#10;from django.core.paginator import Paginator&#10;from .models import Message&#10;from .forms import MessageForm&#10;from apps.Auto.models import Auto&#10;from django.db.models import Q&#10;import django_filters&#10;from django.contrib.auth.models import Group&#10;from apps.utils import DISPONIBILITA_CHOICES&#10;&#10;# Create your views here.&#10;def home(request):&#10;    &quot;&quot;&quot;&#10;    Render the home page of the Autosalone application.&#10;    &quot;&quot;&quot;&#10;    cars = Auto.objects.all()&#10;    filterset = AutoFilterSet(request.GET, queryset=cars)&#10;    paginator = Paginator(filterset.qs, 10)&#10;    page_number = request.GET.get('page')&#10;    cars_page = paginator.get_page(page_number)&#10;&#10;    # Determina se l'utente appartiene a un gruppo specifico&#10;    is_concessionaria = request.user.groups.filter(name='concessionaria').exists() if request.user.is_authenticated else False&#10;    is_user = request.user.groups.filter(name='utente').exists() if request.user.is_authenticated else False&#10;&#10;    return render(request, 'Autosalone/home.html', {&#10;        'cars_page': cars_page,&#10;        'filter': filterset,&#10;        'is_concessionaria': is_concessionaria,&#10;        'is_user': is_user,&#10;        'disponibilita_choices': DISPONIBILITA_CHOICES,&#10;    })&#10;&#10;class MessageCreateView(LoginRequiredMixin, CreateView):&#10;    model = Message&#10;    form_class = MessageForm&#10;    template_name = 'Autosalone/message_form.html'&#10;    success_url = reverse_lazy('message-list')&#10;&#10;    def form_valid(self, form):&#10;        form.instance.sender = self.request.user&#10;        return super().form_valid(form)&#10;&#10;class MessageListView(LoginRequiredMixin, ListView):&#10;    model = Message&#10;    template_name = 'Autosalone/message_list.html'&#10;    context_object_name = 'messages'&#10;&#10;    def get_queryset(self):&#10;        user = self.request.user&#10;        user_ct = ContentType.objects.get_for_model(user.__class__)&#10;        return Message.objects.filter(receiver_content_type=user_ct, receiver_object_id=user.pk)&#10;&#10;class MessageDetailView(LoginRequiredMixin, DetailView):&#10;    model = Message&#10;    template_name = 'Autosalone/message_detail.html'&#10;    context_object_name = 'message'&#10;&#10;class AutoFilter:&#10;    def __init__(self, data):&#10;        self.data = data&#10;        self.disponibilita_choices = DISPONIBILITA_CHOICES&#10;&#10;    def filter(self, queryset):&#10;        marca = self.data.get('marca')&#10;        modello = self.data.get('modello')&#10;        anno = self.data.get('anno')&#10;        cilindrata = self.data.get('cilindrata')&#10;        carburante = self.data.get('carburante')&#10;        cambio = self.data.get('cambio')&#10;        trazione = self.data.get('trazione')&#10;        disponibilita = self.data.get('disponibilita')&#10;        prezzo = self.data.get('prezzo')&#10;&#10;        if marca:&#10;            queryset = queryset.filter(marca__icontains=marca)&#10;        if modello:&#10;            queryset = queryset.filter(modello__icontains=modello)&#10;        if anno:&#10;            queryset = queryset.filter(anno=anno)&#10;        if cilindrata:&#10;            queryset = queryset.filter(cilindrata=cilindrata)&#10;        if carburante != '' and carburante is not None:&#10;            queryset = queryset.filter(carburante=carburante)&#10;        if cambio != '' and cambio is not None:&#10;            queryset = queryset.filter(cambio=cambio)&#10;        if trazione != '' and trazione is not None:&#10;            queryset = queryset.filter(trazione=trazione)&#10;        if disponibilita and disponibilita in dict(DISPONIBILITA_CHOICES):&#10;            queryset = queryset.filter(disponibilita=disponibilita)&#10;        if prezzo:&#10;            queryset = queryset.filter(prezzo__lte=prezzo)&#10;        return queryset&#10;&#10;class AutoFilterSet(django_filters.FilterSet):&#10;    marca = django_filters.CharFilter(lookup_expr='icontains', label='Marca')&#10;    modello = django_filters.CharFilter(lookup_expr='icontains', label='Modello')&#10;    anno = django_filters.NumberFilter(label='Anno')&#10;    cilindrata = django_filters.NumberFilter(label='Cilindrata')&#10;    carburante = django_filters.ChoiceFilter(choices=Auto._meta.get_field('carburante').choices, label='Carburante')&#10;    cambio = django_filters.ChoiceFilter(choices=Auto._meta.get_field('cambio').choices, label='Cambio')&#10;    trazione = django_filters.ChoiceFilter(choices=Auto._meta.get_field('trazione').choices, label='Trazione')&#10;    disponibilita = django_filters.ChoiceFilter(choices=Auto._meta.get_field('disponibilita').choices, label='Disponibilità')&#10;    chilometraggio = django_filters.NumberFilter(label='Chilometraggio massimo', field_name='chilometraggio', lookup_expr='lte')&#10;    prezzo = django_filters.NumberFilter(label='Prezzo massimo', method='filter_prezzo')&#10;&#10;    class Meta:&#10;        model = Auto&#10;        fields = ['marca', 'modello', 'anno', 'cilindrata', 'carburante', 'cambio', 'trazione', 'disponibilita', 'chilometraggio']&#10;&#10;    def filter_prezzo(self, queryset, name, value):&#10;        if hasattr(queryset.model, 'prezzo'):&#10;            return queryset.filter(prezzo__lte=value)&#10;        return queryset&#10;" />
              <option name="updatedContent" value="from django.shortcuts import render&#10;from django.contrib.contenttypes.models import ContentType&#10;from django.contrib.auth.mixins import LoginRequiredMixin&#10;from django.views.generic import CreateView, ListView, DetailView&#10;from django.urls import reverse_lazy&#10;from django.core.paginator import Paginator&#10;from .models import Message&#10;from .forms import MessageForm&#10;from apps.Auto.models import Auto&#10;from django.db.models import Q&#10;import django_filters&#10;from django.contrib.auth.models import Group&#10;from apps.utils import DISPONIBILITA_CHOICES&#10;&#10;# Create your views here.&#10;def home(request):&#10;    &quot;&quot;&quot;&#10;    Render the home page of the Autosalone application.&#10;    &quot;&quot;&quot;&#10;    cars = Auto.objects.all()&#10;    filterset = AutoFilterSet(request.GET, queryset=cars)&#10;    paginator = Paginator(filterset.qs, 10)&#10;    page_number = request.GET.get('page')&#10;    cars_page = paginator.get_page(page_number)&#10;&#10;    # Determina se l'utente appartiene a un gruppo specifico&#10;    is_concessionaria = request.user.groups.filter(name='concessionaria').exists() if request.user.is_authenticated else False&#10;    is_user = request.user.groups.filter(name='utente').exists() if request.user.is_authenticated else False&#10;&#10;    return render(request, 'Autosalone/home.html', {&#10;        'cars_page': cars_page,&#10;        'filter': filterset,&#10;        'is_concessionaria': is_concessionaria,&#10;        'is_user': is_user,&#10;        'disponibilita_choices': DISPONIBILITA_CHOICES,&#10;    })&#10;&#10;class MessageCreateView(LoginRequiredMixin, CreateView):&#10;    model = Message&#10;    form_class = MessageForm&#10;    template_name = 'Autosalone/message_form.html'&#10;    success_url = reverse_lazy('message-list')&#10;&#10;    def form_valid(self, form):&#10;        form.instance.sender = self.request.user&#10;        return super().form_valid(form)&#10;&#10;class MessageListView(LoginRequiredMixin, ListView):&#10;    model = Message&#10;    template_name = 'Autosalone/message_list.html'&#10;    context_object_name = 'messages'&#10;&#10;    def get_queryset(self):&#10;        user = self.request.user&#10;        user_ct = ContentType.objects.get_for_model(user.__class__)&#10;        return Message.objects.filter(receiver_content_type=user_ct, receiver_object_id=user.pk)&#10;&#10;class MessageDetailView(LoginRequiredMixin, DetailView):&#10;    model = Message&#10;    template_name = 'Autosalone/message_detail.html'&#10;    context_object_name = 'message'&#10;&#10;class AutoFilter:&#10;    def __init__(self, data):&#10;        self.data = data&#10;        self.disponibilita_choices = DISPONIBILITA_CHOICES&#10;&#10;    def filter(self, queryset):&#10;        marca = self.data.get('marca')&#10;        modello = self.data.get('modello')&#10;        anno = self.data.get('anno')&#10;        cilindrata = self.data.get('cilindrata')&#10;        carburante = self.data.get('carburante')&#10;        cambio = self.data.get('cambio')&#10;        trazione = self.data.get('trazione')&#10;        disponibilita = self.data.get('disponibilita')&#10;        prezzo = self.data.get('prezzo')&#10;&#10;        if marca:&#10;            queryset = queryset.filter(marca__icontains=marca)&#10;        if modello:&#10;            queryset = queryset.filter(modello__icontains=modello)&#10;        if anno:&#10;            queryset = queryset.filter(anno=anno)&#10;        if cilindrata:&#10;            queryset = queryset.filter(cilindrata=cilindrata)&#10;        if carburante != '' and carburante is not None:&#10;            queryset = queryset.filter(carburante=carburante)&#10;        if cambio != '' and cambio is not None:&#10;            queryset = queryset.filter(cambio=cambio)&#10;        if trazione != '' and trazione is not None:&#10;            queryset = queryset.filter(trazione=trazione)&#10;        if disponibilita and disponibilita in dict(DISPONIBILITA_CHOICES):&#10;            queryset = queryset.filter(disponibilita=disponibilita)&#10;        if prezzo:&#10;            queryset = queryset.filter(prezzo__lte=prezzo)&#10;        return queryset&#10;&#10;class AutoFilterSet(django_filters.FilterSet):&#10;    marca = django_filters.CharFilter(lookup_expr='icontains', label='Marca')&#10;    modello = django_filters.CharFilter(lookup_expr='icontains', label='Modello')&#10;    anno = django_filters.NumberFilter(label='Anno')&#10;    cilindrata = django_filters.NumberFilter(label='Cilindrata')&#10;    carburante = django_filters.ChoiceFilter(choices=Auto._meta.get_field('carburante').choices, label='Carburante')&#10;    cambio = django_filters.ChoiceFilter(choices=Auto._meta.get_field('cambio').choices, label='Cambio')&#10;    trazione = django_filters.ChoiceFilter(choices=Auto._meta.get_field('trazione').choices, label='Trazione')&#10;    disponibilita = django_filters.ChoiceFilter(choices=DISPONIBILITA_CHOICES, label='Disponibilità')&#10;    chilometraggio = django_filters.NumberFilter(label='Chilometraggio massimo', field_name='chilometraggio', lookup_expr='lte')&#10;    prezzo = django_filters.NumberFilter(label='Prezzo massimo', method='filter_prezzo')&#10;&#10;    class Meta:&#10;        model = Auto&#10;        fields = ['marca', 'modello', 'anno', 'cilindrata', 'carburante', 'cambio', 'trazione', 'disponibilita', 'chilometraggio']&#10;&#10;    def filter_prezzo(self, queryset, name, value):&#10;        if hasattr(queryset.model, 'prezzo'):&#10;            return queryset.filter(prezzo__lte=value)&#10;        return queryset" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/Autosaloon_Modena/apps/Concessionaria/forms.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Autosaloon_Modena/apps/Concessionaria/forms.py" />
              <option name="originalContent" value="from django import forms&#10;from django.contrib.auth import authenticate&#10;from django.contrib.auth.models import User&#10;from django.core.exceptions import ValidationError&#10;&#10;from .models import Concessionaria&#10;&#10;class ConcessionariaLoginForm(forms.Form):&#10;    email = forms.EmailField(label='Email', widget=forms.EmailInput(attrs={'class': 'form-control', 'placeholder': ''}))&#10;    password = forms.CharField(widget=forms.PasswordInput(attrs={'class': 'form-control', 'placeholder': ''}))&#10;&#10;    def clean(self):&#10;        cleaned_data = super().clean()&#10;        email = cleaned_data.get('email')&#10;        password = cleaned_data.get('password')&#10;        if email and password:&#10;            user = authenticate(email=email, password=password)&#10;            if user is None:&#10;                raise forms.ValidationError('Email o password non validi')&#10;            cleaned_data['user'] = user&#10;        return cleaned_data&#10;&#10;    def get_user(self):&#10;        return self.cleaned_data.get('user', None)&#10;&#10;class ConcessionariaForm(forms.ModelForm):&#10;    email = forms.EmailField(widget=forms.EmailInput(attrs={'class': 'form-control', 'placeholder': ''}), required=True)&#10;    username = forms.CharField(widget=forms.TextInput(attrs={'class': 'form-control', 'placeholder': ''}), required=True)&#10;    password = forms.CharField(widget=forms.PasswordInput(attrs={'class': 'form-control', 'placeholder': ''}), required=True)&#10;&#10;    class Meta:&#10;        model = Concessionaria&#10;        fields = ['username', 'email', 'password', 'partita_iva', 'codice_fiscale']&#10;        widgets = {&#10;            'partita_iva': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ''}),&#10;            'codice_fiscale': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ''}),&#10;        }&#10;&#10;    def save(self, commit=True):&#10;        user = User.objects.create_user(&#10;            username=self.cleaned_data['username'],&#10;            email=self.cleaned_data['email'],&#10;            password=self.cleaned_data['password']&#10;        )&#10;        concessionaria = super().save(commit=False)&#10;        concessionaria.user = user&#10;        if commit:&#10;            concessionaria.save()&#10;        return concessionaria&#10;&#10;class ConcessionariaUpdateForm(forms.ModelForm):&#10;    class Meta:&#10;        model = Concessionaria&#10;        fields = ['partita_iva', 'codice_fiscale']&#10;        widgets = {&#10;            'partita_iva': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ''}),&#10;            'codice_fiscale': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ''}),&#10;        }&#10;&#10;class ConcessionariaCreateForm(forms.ModelForm):&#10;    password = forms.CharField(widget=forms.PasswordInput, label=&quot;Password&quot;)&#10;    conferma_password = forms.CharField(widget=forms.PasswordInput, label=&quot;Conferma Password&quot;)&#10;    partita_iva = forms.CharField(max_length=11, label=&quot;Partita IVA&quot;)&#10;    codice_fiscale = forms.CharField(max_length=16, label=&quot;Codice Fiscale&quot;)&#10;&#10;    class Meta:&#10;        model = User&#10;        fields = ['username', 'email', 'password']&#10;&#10;    def clean(self):&#10;        cleaned_data = super().clean()&#10;        password = cleaned_data.get('password')&#10;        conferma_password = cleaned_data.get('conferma_password')&#10;        if password != conferma_password:&#10;            raise ValidationError(&quot;Le password non corrispondono.&quot;)&#10;        return cleaned_data&#10;&#10;    def clean_username(self):&#10;        username = self.cleaned_data.get('username')&#10;        if User.objects.filter(username=username).exists():&#10;            raise ValidationError(&quot;Il nome utente è già in uso. Scegli un altro nome utente.&quot;)&#10;        return username&#10;&#10;    def save(self, commit=True):&#10;        user = super().save(commit=True)&#10;        Concessionaria.objects.create(&#10;            user=user,&#10;            partita_iva=self.cleaned_data['partita_iva'],&#10;            codice_fiscale=self.cleaned_data['codice_fiscale']&#10;        )&#10;        return user&#10;" />
              <option name="updatedContent" value="from django import forms&#13;&#10;from django.contrib.auth import authenticate&#13;&#10;from django.contrib.auth.models import User&#13;&#10;from django.core.exceptions import ValidationError&#13;&#10;&#13;&#10;from .models import Concessionaria&#13;&#10;&#13;&#10;class ConcessionariaLoginForm(forms.Form):&#13;&#10;    email = forms.EmailField(label='Email', widget=forms.EmailInput(attrs={'class': 'form-control', 'placeholder': ''}))&#13;&#10;    password = forms.CharField(widget=forms.PasswordInput(attrs={'class': 'form-control', 'placeholder': ''}))&#13;&#10;&#13;&#10;    def clean(self):&#13;&#10;        cleaned_data = super().clean()&#13;&#10;        email = cleaned_data.get('email')&#13;&#10;        password = cleaned_data.get('password')&#13;&#10;        if email and password:&#13;&#10;            user = authenticate(email=email, password=password)&#13;&#10;            if user is None:&#13;&#10;                raise forms.ValidationError('Email o password non validi')&#13;&#10;            cleaned_data['user'] = user&#13;&#10;        return cleaned_data&#13;&#10;&#13;&#10;    def get_user(self):&#13;&#10;        return self.cleaned_data.get('user', None)&#13;&#10;&#13;&#10;class ConcessionariaForm(forms.ModelForm):&#13;&#10;    email = forms.EmailField(widget=forms.EmailInput(attrs={'class': 'form-control', 'placeholder': ''}), required=True)&#13;&#10;    username = forms.CharField(widget=forms.TextInput(attrs={'class': 'form-control', 'placeholder': ''}), required=True)&#13;&#10;    password = forms.CharField(widget=forms.PasswordInput(attrs={'class': 'form-control', 'placeholder': ''}), required=True)&#13;&#10;&#13;&#10;    class Meta:&#13;&#10;        model = Concessionaria&#13;&#10;        fields = ['username', 'email', 'password', 'partita_iva', 'codice_fiscale']&#13;&#10;        widgets = {&#13;&#10;            'partita_iva': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ''}),&#13;&#10;            'codice_fiscale': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ''}),&#13;&#10;        }&#13;&#10;&#13;&#10;    def save(self, commit=True):&#13;&#10;        user = User.objects.create_user(&#13;&#10;            username=self.cleaned_data['username'],&#13;&#10;            email=self.cleaned_data['email'],&#13;&#10;            password=self.cleaned_data['password']&#13;&#10;        )&#13;&#10;        concessionaria = super().save(commit=False)&#13;&#10;        concessionaria.user = user&#13;&#10;        if commit:&#13;&#10;            concessionaria.save()&#13;&#10;        return concessionaria&#13;&#10;&#13;&#10;class ConcessionariaUpdateForm(forms.ModelForm):&#13;&#10;    class Meta:&#13;&#10;        model = Concessionaria&#13;&#10;        fields = ['partita_iva', 'codice_fiscale']&#13;&#10;        widgets = {&#13;&#10;            'partita_iva': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ''}),&#13;&#10;            'codice_fiscale': forms.TextInput(attrs={'class': 'form-control', 'placeholder': ''}),&#13;&#10;        }&#13;&#10;&#13;&#10;class ConcessionariaCreateForm(forms.ModelForm):&#13;&#10;    password = forms.CharField(widget=forms.PasswordInput, label=&quot;Password&quot;)&#13;&#10;    conferma_password = forms.CharField(widget=forms.PasswordInput, label=&quot;Conferma Password&quot;)&#13;&#10;    partita_iva = forms.CharField(max_length=11, label=&quot;Partita IVA&quot;)&#13;&#10;    codice_fiscale = forms.CharField(max_length=16, label=&quot;Codice Fiscale&quot;)&#13;&#10;&#13;&#10;    class Meta:&#13;&#10;        model = User&#13;&#10;        fields = ['username', 'email', 'password']&#13;&#10;&#13;&#10;    def clean(self):&#13;&#10;        cleaned_data = super().clean()&#13;&#10;        password = cleaned_data.get('password')&#13;&#10;        conferma_password = cleaned_data.get('conferma_password')&#13;&#10;        if password != conferma_password:&#13;&#10;            raise ValidationError(&quot;Le password non corrispondono.&quot;)&#13;&#10;        return cleaned_data&#13;&#10;&#13;&#10;    def save(self, commit=True):&#13;&#10;        user = super().save(commit=True)  # Salva l'oggetto User prima&#13;&#10;&#13;&#10;        # Creazione del modello Concessionaria&#13;&#10;        Concessionaria.objects.create(&#13;&#10;            user=user,&#13;&#10;            partita_iva=self.cleaned_data['partita_iva'],&#13;&#10;            codice_fiscale=self.cleaned_data['codice_fiscale']&#13;&#10;        )&#13;&#10;        return user" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/Autosaloon_Modena/apps/utils.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Autosaloon_Modena/apps/utils.py" />
              <option name="originalContent" value="from PIL import Image&#10;import os&#10;&#10;from django.urls import reverse&#10;&#10;&#10;def pillowImage(immagine, x, y):&#10;    if immagine and os.path.exists(immagine.path):&#10;        img = Image.open(immagine.path)&#10;        # Ridimensiona l'immagine se supera una dimensione specifica&#10;        max_size = (x, y)&#10;        if img.height &gt; x or img.width &gt; y:&#10;            img.thumbnail(max_size)&#10;            img.save(immagine.path)&#10;    else:&#10;        img = None&#10;    return img&#10;&#10;&#10;&#10;def user_or_concessionaria(user):&#10;    if user.groups.filter(name='concessionaria').exists():&#10;        return 'Concessionaria', user.id&#10;    elif user.groups.filter(name='utente').exists():&#10;        return 'Utente', user.id&#10;    return None, None&#10;&#10;&#10;&#10;def is_possessore_auto(user, auto):&#10;    return auto.user_auto == user&#10;&#10;&#10;&#10;def get_success_url_by_possessore(request):&#10;    return '/Auto/user-autos'&#10;" />
              <option name="updatedContent" value="from PIL import Image&#13;&#10;import os&#13;&#10;&#13;&#10;from django.urls import reverse&#13;&#10;&#13;&#10;&#13;&#10;def pillowImage(immagine, x, y):&#13;&#10;    if immagine and os.path.exists(immagine.path):&#13;&#10;        img = Image.open(immagine.path)&#13;&#10;        # Ridimensiona l'immagine se supera una dimensione specifica&#13;&#10;        max_size = (x, y)&#13;&#10;        if img.height &gt; x or img.width &gt; y:&#13;&#10;            img.thumbnail(max_size)&#13;&#10;            img.save(immagine.path)&#13;&#10;    else:&#13;&#10;        img = None&#13;&#10;    return img&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;def user_or_concessionaria(user):&#13;&#10;    if user.groups.filter(name='concessionaria').exists():&#13;&#10;        return 'Concessionaria', user.id&#13;&#10;    elif user.groups.filter(name='utente').exists():&#13;&#10;        return 'Utente', user.id&#13;&#10;    return None, None&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;def is_possessore_auto(user, auto):&#13;&#10;    return auto.user_auto == user&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;def get_success_url_by_possessore(request):&#13;&#10;    return '/Auto/user-autos'&#13;&#10;&#13;&#10;&#13;&#10;# Aggiungi una funzione di utilità per le scelte di disponibilità&#13;&#10;DISPONIBILITA_CHOICES = [&#13;&#10;    (&quot;vendita&quot;, &quot;Vendita&quot;),&#13;&#10;    (&quot;affitto&quot;, &quot;Affitto&quot;),&#13;&#10;    (&quot;vendita_affitto&quot;, &quot;Vendita e Affitto&quot;),&#13;&#10;]" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/Autosaloon_Modena/templates/Auto/add_auto_form.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Autosaloon_Modena/templates/Auto/add_auto_form.html" />
              <option name="updatedContent" value="{# Template parziale per il form di aggiunta auto #}&#10;{% for field in form %}&#10;  &lt;div class=&quot;mb-3&quot;&gt;&#10;    {{ field.label_tag }}&#10;    {{ field }}&#10;    {% if field.help_text %}&lt;small class=&quot;form-text text-muted&quot;&gt;{{ field.help_text }}&lt;/small&gt;{% endif %}&#10;    {% for error in field.errors %}&#10;      &lt;div class=&quot;text-danger small&quot;&gt;{{ error }}&lt;/div&gt;&#10;    {% endfor %}&#10;  &lt;/div&gt;&#10;{% endfor %}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/Autosaloon_Modena/templates/Auto/auto_confirm_delete.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Autosaloon_Modena/templates/Auto/auto_confirm_delete.html" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/Autosaloon_Modena/templates/Auto/auto_detail.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Autosaloon_Modena/templates/Auto/auto_detail.html" />
              <option name="originalContent" value="{% extends 'base.html' %}&#10;{% block content %}&#10;&lt;div class=&quot;container-fluid py-5&quot; style=&quot;width:100%;&quot;&gt;&#10;    &lt;div class=&quot;row justify-content-center&quot;&gt;&#10;        &lt;div class=&quot;col-12 col-xl-12 col-xxl-11&quot; style=&quot;max-width: 1200px; padding-left: 0px; padding-right: 0px; width: 100%;&quot;&gt;&#10;            &lt;div class=&quot;card shadow-lg border-0 rounded-4&quot; style=&quot;margin-top: 20px; margin-bottom: 20px; width: 150%; margin-left: -25%;&quot;&gt;&#10;                &lt;div class=&quot;row g-0&quot;&gt;&#10;                    {% if auto.immagine %}&#10;                    &lt;div class=&quot;col-md-5 d-flex align-items-center justify-content-center p-3&quot;&gt;&#10;                        &lt;img src=&quot;{{ auto.immagine.url }}&quot; class=&quot;img-fluid rounded-4 w-100&quot; alt=&quot;{{ auto.marca }} {{ auto.modello }}&quot;&gt;&#10;                    &lt;/div&gt;&#10;                    {% endif %}&#10;                    &lt;div class=&quot;col-md-7 p-4&quot;&gt;&#10;                        &lt;h2 class=&quot;fw-bold mb-3&quot;&gt;{{ auto.marca }} {{ auto.modello }}&lt;/h2&gt;&#10;                        &lt;ul class=&quot;list-group list-group-flush mb-3&quot;&gt;&#10;                            &lt;li class=&quot;list-group-item&quot;&gt;&lt;strong&gt;Anno:&lt;/strong&gt; {{ auto.anno }}&lt;/li&gt;&#10;                            &lt;li class=&quot;list-group-item&quot;&gt;&lt;strong&gt;Cilindrata:&lt;/strong&gt; {{ auto.cilindrata }} cc&lt;/li&gt;&#10;                            &lt;li class=&quot;list-group-item&quot;&gt;&lt;strong&gt;Carburante:&lt;/strong&gt; {{ auto.get_carburante_display }}&lt;/li&gt;&#10;                            &lt;li class=&quot;list-group-item&quot;&gt;&lt;strong&gt;Cambio:&lt;/strong&gt; {{ auto.get_cambio_display }}&lt;/li&gt;&#10;                            &lt;li class=&quot;list-group-item&quot;&gt;&lt;strong&gt;Trazione:&lt;/strong&gt; {{ auto.get_trazione_display }}&lt;/li&gt;&#10;                            &lt;li class=&quot;list-group-item&quot;&gt;&lt;strong&gt;Chilometraggio:&lt;/strong&gt; {{ auto.chilometraggio|default:'N/A' }} km&lt;/li&gt;&#10;                            &lt;li class=&quot;list-group-item&quot;&gt;&lt;strong&gt;Disponibilità:&lt;/strong&gt; {{ auto.get_disponibilita_display }}&lt;/li&gt;&#10;                        &lt;/ul&gt;&#10;                        {% if auto.descrizione %}&#10;                        &lt;div class=&quot;mb-3&quot;&gt;&#10;                            &lt;strong&gt;Descrizione:&lt;/strong&gt;&#10;                            &lt;p&gt;{{ auto.descrizione }}&lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                        {% endif %}&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;mt-4&quot;&gt;&#10;                &lt;a href=&quot;{{ request.GET.next|default:'%s' }}&quot; class=&quot;btn btn-secondary mt-3&quot;&gt;Ritorna all'elenco auto&lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;{% endblock %}&#10;" />
              <option name="updatedContent" value="{% extends 'base.html' %}&#10;{% block content %}&#10;&lt;div class=&quot;container-fluid py-5&quot; style=&quot;width:100%;&quot;&gt;&#10;    &lt;div class=&quot;row justify-content-center&quot;&gt;&#10;        &lt;div class=&quot;col-12 col-xl-12 col-xxl-11&quot; style=&quot;max-width: 1200px; padding-left: 0px; padding-right: 0px; width: 100%;&quot;&gt;&#10;            &lt;div class=&quot;card shadow-lg border-0 rounded-4&quot; style=&quot;margin-top: 20px; margin-bottom: 20px; width: 150%; margin-left: -25%;&quot;&gt;&#10;                &lt;div class=&quot;row g-0&quot;&gt;&#10;                    {% if auto.immagine %}&#10;                    &lt;div class=&quot;col-md-5 d-flex align-items-center justify-content-center p-3&quot;&gt;&#10;                        &lt;img src=&quot;{{ auto.immagine.url }}&quot; class=&quot;img-fluid rounded-4 w-100&quot; alt=&quot;{{ auto.marca }} {{ auto.modello }}&quot;&gt;&#10;                    &lt;/div&gt;&#10;                    {% endif %}&#10;                    &lt;div class=&quot;col-md-7 p-4&quot;&gt;&#10;                        &lt;h2 class=&quot;fw-bold mb-3&quot;&gt;{{ auto.marca }} {{ auto.modello }}&lt;/h2&gt;&#10;                        &lt;ul class=&quot;list-group list-group-flush mb-3&quot;&gt;&#10;                            &lt;li class=&quot;list-group-item&quot;&gt;&lt;strong&gt;Anno:&lt;/strong&gt; {{ auto.anno }}&lt;/li&gt;&#10;                            &lt;li class=&quot;list-group-item&quot;&gt;&lt;strong&gt;Cilindrata:&lt;/strong&gt; {{ auto.cilindrata }} cc&lt;/li&gt;&#10;                            &lt;li class=&quot;list-group-item&quot;&gt;&lt;strong&gt;Carburante:&lt;/strong&gt; {{ auto.get_carburante_display }}&lt;/li&gt;&#10;                            &lt;li class=&quot;list-group-item&quot;&gt;&lt;strong&gt;Cambio:&lt;/strong&gt; {{ auto.get_cambio_display }}&lt;/li&gt;&#10;                            &lt;li class=&quot;list-group-item&quot;&gt;&lt;strong&gt;Trazione:&lt;/strong&gt; {{ auto.get_trazione_display }}&lt;/li&gt;&#10;                            &lt;li class=&quot;list-group-item&quot;&gt;&lt;strong&gt;Chilometraggio:&lt;/strong&gt; {{ auto.chilometraggio|default:'N/A' }} km&lt;/li&gt;&#10;                            &lt;li class=&quot;list-group-item&quot;&gt;&lt;strong&gt;Disponibilità:&lt;/strong&gt; {{ auto.get_disponibilita_display }}&lt;/li&gt;&#10;                        &lt;/ul&gt;&#10;                        {% if auto.descrizione %}&#10;                        &lt;div class=&quot;mb-3&quot;&gt;&#10;                            &lt;strong&gt;Descrizione:&lt;/strong&gt;&#10;                            &lt;p&gt;{{ auto.descrizione }}&lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                        {% endif %}&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;mt-4&quot;&gt;&#10;                {% url 'Auto:user_autos' as default_url %}&#10;                &lt;a href=&quot;{{ request.GET.next|default:default_url }}&quot; class=&quot;btn btn-secondary mt-3&quot;&gt;Ritorna all'elenco auto&lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;{% endblock %}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/Autosaloon_Modena/templates/Auto/user_autos.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Autosaloon_Modena/templates/Auto/user_autos.html" />
              <option name="originalContent" value="{% extends &quot;base.html&quot; %}&#10;&#10;{% block content %}&#10;&lt;table style=&quot;width:100%; min-height:70vh; margin-top:3rem;&quot;&gt;&#10;    &lt;tr style=&quot;position: absolute; left: 10px;&quot;&gt;&#10;        {% if is_concessionaria %}&#10;        &lt;!-- Sidebar Filter a sinistra --&gt;&#10;        &lt;td style=&quot;width:340px; min-width:260px; max-width:400px; vertical-align:top; padding-right:24px; height:1%;&quot;&gt;&#10;            &lt;div class=&quot;card shadow-sm p-3 bg-white rounded sticky-top&quot; style=&quot;top: 90px; min-height: 400px;&quot;&gt;&#10;                &lt;form method=&quot;get&quot;&gt;&#10;                    &lt;div class=&quot;mb-3&quot;&gt;&#10;                        &lt;label for=&quot;marca&quot; class=&quot;form-label&quot;&gt;Marca&lt;/label&gt;&#10;                        &lt;input type=&quot;text&quot; id=&quot;marca&quot; name=&quot;marca&quot; class=&quot;form-control&quot; value=&quot;{{ request.GET.marca }}&quot;&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;mb-3&quot;&gt;&#10;                        &lt;label for=&quot;modello&quot; class=&quot;form-label&quot;&gt;Modello&lt;/label&gt;&#10;                        &lt;input type=&quot;text&quot; id=&quot;modello&quot; name=&quot;modello&quot; class=&quot;form-control&quot; value=&quot;{{ request.GET.modello }}&quot;&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;mb-3&quot;&gt;&#10;                        &lt;label for=&quot;cilindrata&quot; class=&quot;form-label&quot;&gt;Cilindrata&lt;/label&gt;&#10;                        &lt;input type=&quot;text&quot; id=&quot;cilindrata&quot; name=&quot;cilindrata&quot; class=&quot;form-control&quot; value=&quot;{{ request.GET.cilindrata }}&quot;&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;mb-3&quot;&gt;&#10;                        &lt;label for=&quot;trazione&quot; class=&quot;form-label&quot;&gt;Trazione&lt;/label&gt;&#10;                        &lt;input type=&quot;text&quot; id=&quot;trazione&quot; name=&quot;trazione&quot; class=&quot;form-control&quot; value=&quot;{{ request.GET.trazione }}&quot;&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;mb-3&quot;&gt;&#10;                        &lt;label for=&quot;carburante&quot; class=&quot;form-label&quot;&gt;Carburante&lt;/label&gt;&#10;                        &lt;input type=&quot;text&quot; id=&quot;carburante&quot; name=&quot;carburante&quot; class=&quot;form-control&quot; value=&quot;{{ request.GET.carburante }}&quot;&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary w-100&quot;&gt;Filtra&lt;/button&gt;&#10;                &lt;/form&gt;&#10;            &lt;/div&gt;&#10;        &lt;/td&gt;&#10;        &lt;!-- Sidebar Filter a sinistra --&gt;&#10;        {% else %}&#10;        &lt;!-- Sidebar Filter a sinistra (non concessionaria) --&gt;&#10;        &lt;td style=&quot;width:340px; min-width:260px; max-width:400px; vertical-align:top; padding-right:24px; height:1%;&quot;&gt;&#10;        {% endif %}&#10;        &lt;!-- Main Content: auto a destra --&gt;&#10;        &lt;td style=&quot;vertical-align:top; padding-left: 15px; padding-right: 15px; width:100%;&quot;&gt;&#10;            &lt;div class=&quot;d-flex justify-content-between align-items-center mb-4&quot;&gt;&#10;                &lt;h1 class=&quot;text-primary mb-0&quot;&gt;Le mie Auto&lt;/h1&gt;&#10;                &lt;a href=&quot;{% url 'Auto:add_auto' %}&quot; class=&quot;btn btn-success&quot; style=&quot;min-width:180px;&quot;&gt;Aggiungi Auto&lt;/a&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;row&quot;&gt;&#10;                {% if autos|length == 0 %}&#10;                &lt;div class=&quot;col-12 text-center&quot;&gt;&#10;                    &lt;p class=&quot;text-muted&quot;&gt;Nessuna auto disponibile&lt;/p&gt;&#10;                &lt;/div&gt;&#10;                {% else %}&#10;                {% for auto in autos %}&#10;                &lt;div class=&quot;col-xl-4 col-lg-6 col-md-6 mb-4&quot;&gt;&#10;                    &lt;div class=&quot;card shadow-sm h-100&quot;&gt;&#10;                        &lt;img src=&quot;{{ auto.immagine.url }}&quot; class=&quot;card-img-top&quot; alt=&quot;{{ auto.nome }}&quot; style=&quot;object-fit:cover; height:200px;&quot;&gt;&#10;                        &lt;div class=&quot;card-body d-flex flex-column&quot;&gt;&#10;                            &lt;h5 class=&quot;card-title&quot;&gt;{{ auto.nome }}&lt;/h5&gt;&#10;                            &lt;p class=&quot;card-text mb-1&quot;&gt;Anno: {{ auto.anno }}&lt;/p&gt;&#10;                            &lt;p class=&quot;card-text mb-2&quot;&gt;Prezzo: &lt;strong&gt;€{{ auto.prezzo }}&lt;/strong&gt;&lt;/p&gt;&#10;                            &lt;div class=&quot;mt-auto d-flex justify-content-between gap-1&quot;&gt;&#10;                                &lt;a href=&quot;#&quot; class=&quot;btn btn-primary btn-sm&quot;&gt;Visualizza&lt;/a&gt;&#10;                                &lt;a href=&quot;#&quot; class=&quot;btn btn-warning btn-sm&quot;&gt;Modifica&lt;/a&gt;&#10;                                &lt;form method=&quot;post&quot; action=&quot;{% url 'Auto:delete_auto' auto.pk %}&quot; style=&quot;display:inline;&quot;&gt;&#10;                                    {% csrf_token %}&#10;                                    &lt;button type=&quot;button&quot; class=&quot;btn btn-danger btn-sm delete-auto-btn&quot;&gt;Elimina&lt;/button&gt;&#10;                                &lt;/form&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                {% endfor %}&#10;                {% endif %}&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;d-flex justify-content-center&quot;&gt;&#10;                &lt;nav aria-label=&quot;Paginazione&quot;&gt;&#10;                    &lt;ul class=&quot;pagination&quot;&gt;&#10;                        {% if autos.has_previous %}&#10;                        &lt;li class=&quot;page-item&quot;&gt;&#10;                            &lt;a class=&quot;page-link&quot; href=&quot;?page={{ autos.previous_page_number }}&quot; aria-label=&quot;Precedente&quot;&gt;&#10;                                &lt;span aria-hidden=&quot;true&quot;&gt;&amp;laquo;&lt;/span&gt;&#10;                            &lt;/a&gt;&#10;                        &lt;/li&gt;&#10;                        {% endif %}&#10;                        {% for num in autos.paginator.page_range %}&#10;                        &lt;li class=&quot;page-item {% if autos.number == num %}active{% endif %}&quot;&gt;&#10;                            &lt;a class=&quot;page-link&quot; href=&quot;?page={{ num }}&quot;&gt;{{ num }}&lt;/a&gt;&#10;                        &lt;/li&gt;&#10;                        {% endfor %}&#10;                        {% if autos.has_next %}&#10;                        &lt;li class=&quot;page-item&quot;&gt;&#10;                            &lt;a class=&quot;page-link&quot; href=&quot;?page={{ autos.next_page_number }}&quot; aria-label=&quot;Successivo&quot;&gt;&#10;                                &lt;span aria-hidden=&quot;true&quot;&gt;&amp;raquo;&lt;/span&gt;&#10;                            &lt;/a&gt;&#10;                        &lt;/li&gt;&#10;                        {% endif %}&#10;                    &lt;/ul&gt;&#10;                &lt;/nav&gt;&#10;            &lt;/div&gt;&#10;        &lt;/td&gt;&#10;    &lt;/tr&gt;&#10;&lt;/table&gt;&#10;{% include 'Autosalone/confirm_delete_popup.html' %}&#10;&lt;script&gt;&#10;document.addEventListener('DOMContentLoaded', function() {&#10;    let formToDelete = null;&#10;    document.querySelectorAll('.delete-auto-btn').forEach(function(btn) {&#10;        btn.addEventListener('click', function(e) {&#10;            e.preventDefault();&#10;            formToDelete = btn.closest('form');&#10;            var modal = new bootstrap.Modal(document.getElementById('confirmDeleteModal'));&#10;            var confirmBtn = document.getElementById('confirmDeleteBtn');&#10;            confirmBtn.onclick = function() {&#10;                if(formToDelete) formToDelete.submit();&#10;                modal.hide();&#10;            };&#10;            modal.show();&#10;        });&#10;    });&#10;});&#10;&lt;/script&gt;&#10;{% endblock %}&#10;" />
              <option name="updatedContent" value="{% extends &quot;base.html&quot; %}&#10;&#10;{% block content %}&#10;&lt;table style=&quot;width:100%; min-height:70vh; margin-top:3rem;&quot;&gt;&#10;    &lt;tr style=&quot;position: absolute; left: 10px;&quot;&gt;&#10;        {% if is_concessionaria %}&#10;        &lt;!-- Sidebar Filter a sinistra --&gt;&#10;        &lt;td style=&quot;width:340px; min-width:260px; max-width:400px; vertical-align:top; padding-right:24px; height:1%;&quot;&gt;&#10;            &lt;div class=&quot;card shadow-sm p-3 bg-white rounded sticky-top&quot; style=&quot;top: 90px; min-height: 400px;&quot;&gt;&#10;                &lt;form method=&quot;get&quot;&gt;&#10;                    &lt;div class=&quot;mb-3&quot;&gt;&#10;                        &lt;label for=&quot;marca&quot; class=&quot;form-label&quot;&gt;Marca&lt;/label&gt;&#10;                        &lt;input type=&quot;text&quot; id=&quot;marca&quot; name=&quot;marca&quot; class=&quot;form-control&quot; value=&quot;{{ request.GET.marca }}&quot;&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;mb-3&quot;&gt;&#10;                        &lt;label for=&quot;modello&quot; class=&quot;form-label&quot;&gt;Modello&lt;/label&gt;&#10;                        &lt;input type=&quot;text&quot; id=&quot;modello&quot; name=&quot;modello&quot; class=&quot;form-control&quot; value=&quot;{{ request.GET.modello }}&quot;&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;mb-3&quot;&gt;&#10;                        &lt;label for=&quot;cilindrata&quot; class=&quot;form-label&quot;&gt;Cilindrata&lt;/label&gt;&#10;                        &lt;input type=&quot;text&quot; id=&quot;cilindrata&quot; name=&quot;cilindrata&quot; class=&quot;form-control&quot; value=&quot;{{ request.GET.cilindrata }}&quot;&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;mb-3&quot;&gt;&#10;                        &lt;label for=&quot;trazione&quot; class=&quot;form-label&quot;&gt;Trazione&lt;/label&gt;&#10;                        &lt;input type=&quot;text&quot; id=&quot;trazione&quot; name=&quot;trazione&quot; class=&quot;form-control&quot; value=&quot;{{ request.GET.trazione }}&quot;&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;mb-3&quot;&gt;&#10;                        &lt;label for=&quot;carburante&quot; class=&quot;form-label&quot;&gt;Carburante&lt;/label&gt;&#10;                        &lt;input type=&quot;text&quot; id=&quot;carburante&quot; name=&quot;carburante&quot; class=&quot;form-control&quot; value=&quot;{{ request.GET.carburante }}&quot;&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary w-100&quot;&gt;Filtra&lt;/button&gt;&#10;                &lt;/form&gt;&#10;            &lt;/div&gt;&#10;        &lt;/td&gt;&#10;        &lt;!-- Sidebar Filter a sinistra --&gt;&#10;        {% else %}&#10;        &lt;!-- Sidebar Filter a sinistra (non concessionaria) --&gt;&#10;        &lt;td style=&quot;width:340px; min-width:260px; max-width:400px; vertical-align:top; padding-right:24px; height:1%;&quot;&gt;&#10;        {% endif %}&#10;        &lt;!-- Main Content: auto a destra --&gt;&#10;        &lt;td style=&quot;vertical-align:top; padding-left: 15px; padding-right: 15px; width:100%;&quot;&gt;&#10;            &lt;div class=&quot;d-flex justify-content-between align-items-center mb-4&quot;&gt;&#10;                &lt;h1 class=&quot;text-primary mb-0&quot;&gt;Le mie Auto&lt;/h1&gt;&#10;                &lt;a href=&quot;{% url 'Auto:add_auto' %}&quot; class=&quot;btn btn-success&quot; style=&quot;min-width:180px;&quot;&gt;Aggiungi Auto&lt;/a&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;row&quot;&gt;&#10;                {% if autos|length == 0 %}&#10;                &lt;div class=&quot;col-12 text-center&quot;&gt;&#10;                    &lt;p class=&quot;text-muted&quot;&gt;Nessuna auto disponibile&lt;/p&gt;&#10;                &lt;/div&gt;&#10;                {% else %}&#10;                {% for auto in autos %}&#10;                &lt;div class=&quot;col-xl-4 col-lg-6 col-md-6 mb-4&quot;&gt;&#10;                    &lt;div class=&quot;card shadow-sm h-100&quot;&gt;&#10;                        &lt;img src=&quot;{{ auto.immagine.url }}&quot; class=&quot;card-img-top&quot; alt=&quot;{{ auto.nome }}&quot; style=&quot;object-fit:cover; height:200px;&quot;&gt;&#10;                        &lt;div class=&quot;card-body d-flex flex-column&quot;&gt;&#10;                            &lt;h5 class=&quot;card-title&quot;&gt;{{ auto.nome }}&lt;/h5&gt;&#10;                            &lt;p class=&quot;card-text mb-1&quot;&gt;Anno: {{ auto.anno }}&lt;/p&gt;&#10;                            &lt;p class=&quot;card-text mb-2&quot;&gt;Prezzo: &lt;strong&gt;€{{ auto.prezzo }}&lt;/strong&gt;&lt;/p&gt;&#10;                            &lt;div class=&quot;mt-auto d-flex justify-content-between gap-1&quot;&gt;&#10;                                &lt;a href=&quot;{% url 'Auto:auto_detail' auto.pk %}&quot; class=&quot;btn btn-primary btn-sm&quot;&gt;Visualizza&lt;/a&gt;&#10;                                &lt;a href=&quot;#&quot; class=&quot;btn btn-warning btn-sm&quot;&gt;Modifica&lt;/a&gt;&#10;                                &lt;form method=&quot;post&quot; action=&quot;{% url 'Auto:delete_auto' auto.pk %}&quot; style=&quot;display:inline;&quot;&gt;&#10;                                    {% csrf_token %}&#10;                                    &lt;button type=&quot;button&quot; class=&quot;btn btn-danger btn-sm delete-auto-btn&quot;&gt;Elimina&lt;/button&gt;&#10;                                &lt;/form&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                {% endfor %}&#10;                {% endif %}&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;d-flex justify-content-center&quot;&gt;&#10;                &lt;nav aria-label=&quot;Paginazione&quot;&gt;&#10;                    &lt;ul class=&quot;pagination&quot;&gt;&#10;                        {% if autos.has_previous %}&#10;                        &lt;li class=&quot;page-item&quot;&gt;&#10;                            &lt;a class=&quot;page-link&quot; href=&quot;?page={{ autos.previous_page_number }}&quot; aria-label=&quot;Precedente&quot;&gt;&#10;                                &lt;span aria-hidden=&quot;true&quot;&gt;&amp;laquo;&lt;/span&gt;&#10;                            &lt;/a&gt;&#10;                        &lt;/li&gt;&#10;                        {% endif %}&#10;                        {% for num in autos.paginator.page_range %}&#10;                        &lt;li class=&quot;page-item {% if autos.number == num %}active{% endif %}&quot;&gt;&#10;                            &lt;a class=&quot;page-link&quot; href=&quot;?page={{ num }}&quot;&gt;{{ num }}&lt;/a&gt;&#10;                        &lt;/li&gt;&#10;                        {% endfor %}&#10;                        {% if autos.has_next %}&#10;                        &lt;li class=&quot;page-item&quot;&gt;&#10;                            &lt;a class=&quot;page-link&quot; href=&quot;?page={{ autos.next_page_number }}&quot; aria-label=&quot;Successivo&quot;&gt;&#10;                                &lt;span aria-hidden=&quot;true&quot;&gt;&amp;raquo;&lt;/span&gt;&#10;                            &lt;/a&gt;&#10;                        &lt;/li&gt;&#10;                        {% endif %}&#10;                    &lt;/ul&gt;&#10;                &lt;/nav&gt;&#10;            &lt;/div&gt;&#10;        &lt;/td&gt;&#10;    &lt;/tr&gt;&#10;&lt;/table&gt;&#10;{% include 'Autosalone/confirm_delete_popup.html' %}&#10;&lt;script&gt;&#10;document.addEventListener('DOMContentLoaded', function() {&#10;    let formToDelete = null;&#10;    document.querySelectorAll('.delete-auto-btn').forEach(function(btn) {&#10;        btn.addEventListener('click', function(e) {&#10;            e.preventDefault();&#10;            formToDelete = btn.closest('form');&#10;            var modal = new bootstrap.Modal(document.getElementById('confirmDeleteModal'));&#10;            var confirmBtn = document.getElementById('confirmDeleteBtn');&#10;            confirmBtn.onclick = function() {&#10;                if(formToDelete) formToDelete.submit();&#10;                modal.hide();&#10;            };&#10;            modal.show();&#10;        });&#10;    });&#10;});&#10;&lt;/script&gt;&#10;{% endblock %}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/Autosaloon_Modena/templates/Autosalone/confirm_delete_popup.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Autosaloon_Modena/templates/Autosalone/confirm_delete_popup.html" />
              <option name="updatedContent" value="&lt;!-- Popup di conferma eliminazione generico e riutilizzabile --&gt;&#10;&lt;div class=&quot;modal fade&quot; id=&quot;confirmDeleteModal&quot; tabindex=&quot;-1&quot; aria-labelledby=&quot;confirmDeleteModalLabel&quot; aria-hidden=&quot;true&quot;&gt;&#10;  &lt;div class=&quot;modal-dialog modal-dialog-centered&quot;&gt;&#10;    &lt;div class=&quot;modal-content&quot;&gt;&#10;      &lt;div class=&quot;modal-header&quot;&gt;&#10;        &lt;h5 class=&quot;modal-title&quot; id=&quot;confirmDeleteModalLabel&quot;&gt;Conferma eliminazione&lt;/h5&gt;&#10;        &lt;button type=&quot;button&quot; class=&quot;btn-close&quot; data-bs-dismiss=&quot;modal&quot; aria-label=&quot;Chiudi&quot;&gt;&lt;/button&gt;&#10;      &lt;/div&gt;&#10;      &lt;div class=&quot;modal-body&quot;&gt;&#10;        Sei sicuro di voler eliminare questo elemento? Questa azione non può essere annullata.&#10;      &lt;/div&gt;&#10;      &lt;div class=&quot;modal-footer&quot;&gt;&#10;        &lt;button type=&quot;button&quot; class=&quot;btn btn-secondary&quot; data-bs-dismiss=&quot;modal&quot;&gt;Annulla&lt;/button&gt;&#10;        &lt;button type=&quot;button&quot; class=&quot;btn btn-danger&quot; id=&quot;confirmDeleteBtn&quot;&gt;Elimina&lt;/button&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  &lt;/div&gt;&#10;&lt;/div&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/Autosaloon_Modena/templates/Autosalone/home.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Autosaloon_Modena/templates/Autosalone/home.html" />
              <option name="originalContent" value="{% load static %}&#10;&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;it&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Concessionaria - Home&lt;/title&gt;&#10;    &lt;link rel=&quot;icon&quot; type=&quot;image/png&quot; href=&quot;{% static 'favicon.png' %}&quot;&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;{% static 'css/bootstrap.min.css' %}&quot;&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;{% static 'css/home_custom.css' %}&quot;&gt;&#10;    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Pacifico&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;&#10;    &lt;style&gt;&#10;        html, body {&#10;            height: 100%;&#10;        }&#10;        body {&#10;            min-height: 100vh;&#10;            display: flex;&#10;            flex-direction: column;&#10;            background-color: darkblue;&#10;        }&#10;        main {&#10;            flex: 1;&#10;        }&#10;        .am-logo-favicon {&#10;            font-family: 'Pacifico', cursive;&#10;            font-size: 2.1rem;&#10;            font-weight: bold;&#10;            color: #2563eb;&#10;            background: white;&#10;            border-radius: 50%;&#10;            width: 2.6rem;&#10;            height: 2.6rem;&#10;            display: flex;&#10;            align-items: center;&#10;            justify-content: center;&#10;            box-shadow: 0 2px 8px #2563eb33;&#10;            position: absolute;&#10;            left: 0.7rem;&#10;            top: 0.7rem;&#10;            z-index: 1000;&#10;        }&#10;        @media (max-width: 600px) {&#10;            .am-logo-favicon { font-size: 1.3rem; width: 1.7rem; height: 1.7rem; }&#10;        }&#10;    &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&#10;    &lt;header&gt;&#10;        &lt;div class=&quot;header-custom d-flex justify-content-between align-items-center px-4 py-2&quot; style=&quot;gap: 24px; background-color: darkblue;&quot;&gt;&#10;            &lt;h1 class=&quot;header-title&quot; style=&quot;font-family: 'Pacifico', cursive; font-size:2.7rem; font-weight:900; letter-spacing:2px; color:#fff; text-shadow:2px 2px 8px #1e3a8a, 0 0 12px #2563eb; margin:0;&quot;&gt;&#10;                Autosaloon&lt;span style=&quot;color:#2563eb;&quot;&gt;Modena&lt;/span&gt;&#10;            &lt;/h1&gt;&#10;&#10;            &lt;nav class=&quot;d-flex align-items-center&quot; style=&quot;gap: 24px; flex-wrap: nowrap;&quot;&gt;&#10;                {% if user.is_authenticated %}&#10;                    {% if is_concessionaria %}&#10;                        &lt;a href=&quot;{% url 'Auto:user_autos' %}&quot; class=&quot;btn btn-outline-light btn-sm d-flex flex-column align-items-center justify-content-center&quot; style=&quot;width:70px; height:70px; border-radius:16px;&quot;&gt;&#10;                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;32&quot; height=&quot;32&quot; fill=&quot;#fff&quot; class=&quot;bi bi-car-front&quot; viewBox=&quot;0 0 16 16&quot;&gt;&#10;                                &lt;path d=&quot;M4 9a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm10 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z&quot;/&gt;&#10;                                &lt;path d=&quot;M16 8.5v-1c0-.966-.784-1.75-1.75-1.75h-.805l-.547-2.186A2.5 2.5 0 0 0 10.464 1H5.536a2.5 2.5 0 0 0-2.434 3.564l-.547 2.186h-.805A1.75 1.75 0 0 0 0 7.5v1c0 .456.154.877.414 1.215A2.5 2.5 0 0 0 2 13.5V14a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1v-1h6v1a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1v-.5a2.5 2.5 0 0 0 1.586-3.785A1.75 1.75 0 0 0 16 8.5zM5.536 2h4.928a1.5 1.5 0 0 1 1.46 1.964l-.5 2H4.58l-.5-2A1.5 1.5 0 0 1 5.536 2zM1 7.5c0-.414.336-.75.75-.75h12.5c.414 0 .75.336.75.75v1a.75.75 0 0 1-.75.75H1.75A.75.75 0 0 1 1 8.5v-1zm1.5 5A1.5 1.5 0 0 1 1.5 11h13a1.5 1.5 0 0 1-1.5 1.5h-10z&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span style=&quot;font-size:0.85rem; color: #fff;&quot;&gt;Le mie Auto&lt;/span&gt;&#10;                        &lt;/a&gt;&#10;                        &lt;span style=&quot;width:16px;&quot;&gt;&lt;/span&gt;&#10;                        &lt;a href=&quot;#&quot; class=&quot;btn btn-outline-light btn-sm d-flex flex-column align-items-center justify-content-center&quot; style=&quot;width:70px; height:70px; border-radius:16px;&quot;&gt;&#10;                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;32&quot; height=&quot;32&quot; fill=&quot;#fff&quot; class=&quot;bi bi-key&quot; viewBox=&quot;0 0 16 16&quot;&gt;&#10;                                &lt;path d=&quot;M3 8a5 5 0 1 1 9.584 2.5H15a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-1v1a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-1H8.5A5 5 0 0 1 3 8zm5-4a4 4 0 1 0 0 8 4 4 0 0 0 0-8z&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span style=&quot;font-size:0.85rem; color: #fff;&quot;&gt;Auto Affittate&lt;/span&gt;&#10;                        &lt;/a&gt;&#10;                        &lt;span style=&quot;width:16px;&quot;&gt;&lt;/span&gt;&#10;                        &lt;a href=&quot;#&quot; class=&quot;btn btn-outline-light btn-sm d-flex flex-column align-items-center justify-content-center&quot; style=&quot;width:70px; height:70px; border-radius:16px;&quot;&gt;&#10;                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;32&quot; height=&quot;32&quot; fill=&quot;#fff&quot; class=&quot;bi bi-calendar-check&quot; viewBox=&quot;0 0 16 16&quot;&gt;&#10;                                &lt;path d=&quot;M10.854 8.146a.5.5 0 0 0-.708.708l1 1a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L11.5 8.793l-.646-.647z&quot;/&gt;&#10;                                &lt;path d=&quot;M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM1 3v11a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1h-1v.5a.5.5 0 0 1-1 0V2H4v.5a.5.5 0 0 1-1 0V2H2a1 1 0 0 0-1 1z&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span style=&quot;font-size:0.85rem; color: #fff;&quot;&gt;Auto Prenotate&lt;/span&gt;&#10;                        &lt;/a&gt;&#10;                        &lt;span style=&quot;width:16px;&quot;&gt;&lt;/span&gt;&#10;                        &lt;a href=&quot;#&quot; class=&quot;btn btn-outline-light btn-sm d-flex flex-column align-items-center justify-content-center&quot; style=&quot;width:70px; height:70px; border-radius:16px;&quot;&gt;&#10;                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;32&quot; height=&quot;32&quot; fill=&quot;#fff&quot; class=&quot;bi bi-handshake&quot; viewBox=&quot;0 0 16 16&quot;&gt;&#10;                                &lt;path d=&quot;M8.354 1.646a.5.5 0 0 1 .707 0l5.293 5.293a.5.5 0 0 1 0 .707l-5.293 5.293a.5.5 0 0 1-.707 0L2.354 7.646a.5.5 0 0 1 0-.707L7.646 1.646a.5.5 0 0 1 .708 0z&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span style=&quot;font-size:0.85rem; color: #fff;&quot;&gt;Auto in Contrattazione&lt;/span&gt;&#10;                        &lt;/a&gt;&#10;                    {% elif is_user %}&#10;                        &lt;a href=&quot;{% url 'Auto:user_autos' %}&quot; class=&quot;btn btn-outline-light btn-sm d-flex flex-column align-items-center justify-content-center&quot; style=&quot;width:70px; height:70px; border-radius:16px;&quot;&gt;&#10;                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;32&quot; height=&quot;32&quot; fill=&quot;#fff&quot; class=&quot;bi bi-car-front&quot; viewBox=&quot;0 0 16 16&quot;&gt;&#10;                                &lt;path d=&quot;M4 9a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm10 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z&quot;/&gt;&#10;                                &lt;path d=&quot;M16 8.5v-1c0-.966-.784-1.75-1.75-1.75h-.805l-.547-2.186A2.5 2.5 0 0 0 10.464 1H5.536a2.5 2.5 0 0 0-2.434 3.564l-.547 2.186h-.805A1.75 1.75 0 0 0 0 7.5v1c0 .456.154.877.414 1.215A2.5 2.5 0 0 0 2 13.5V14a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1v-1h6v1a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1v-.5a2.5 2.5 0 0 0 1.586-3.785A1.75 1.75 0 0 0 16 8.5zM5.536 2h4.928a1.5 1.5 0 0 1 1.46 1.964l-.5 2H4.58l-.5-2A1.5 1.5 0 0 1 5.536 2zM1 7.5c0-.414.336-.75.75-.75h12.5c.414 0 .75.336.75.75v1a.75.75 0 0 1-.75.75H1.75A.75.75 0 0 1 1 8.5v-1zm1.5 5A1.5 1.5 0 0 1 1.5 11h13a1.5 1.5 0 0 1-1.5 1.5h-10z&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span style=&quot;font-size:0.85rem; color: #fff;&quot;&gt;Le mie Auto&lt;/span&gt;&#10;                        &lt;/a&gt;&#10;                        &lt;span style=&quot;width:16px;&quot;&gt;&lt;/span&gt;&#10;                        &lt;a href=&quot;#&quot; class=&quot;btn btn-outline-light btn-sm d-flex flex-column align-items-center justify-content-center&quot; style=&quot;width:70px; height:70px; border-radius:16px;&quot;&gt;&#10;                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;32&quot; height=&quot;32&quot; fill=&quot;#fff&quot; class=&quot;bi bi-calendar-check&quot; viewBox=&quot;0 0 16 16&quot;&gt;&#10;                                &lt;path d=&quot;M10.854 8.146a.5.5 0 0 0-.708.708l1 1a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L11.5 8.793l-.646-.647z&quot;/&gt;&#10;                                &lt;path d=&quot;M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM1 3v11a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1h-1v.5a.5.5 0 0 1-1 0V2H4v.5a.5.5 0 0 1-1 0V2H2a1 1 0 0 0-1 1z&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span style=&quot;font-size:0.85rem; color: #fff;&quot;&gt;Auto Affittate/Prenotate&lt;/span&gt;&#10;                        &lt;/a&gt;&#10;                    {% endif %}&#10;                {% endif %}&#10;                {% if user.is_authenticated %}&#10;                    &lt;div class=&quot;dropdown&quot;&gt;&#10;                        &lt;a href=&quot;#&quot; class=&quot;btn btn-link btn-sm text-white fw-bold text-decoration-none dropdown-toggle&quot; id=&quot;profileDropdown&quot; data-bs-toggle=&quot;dropdown&quot; aria-expanded=&quot;false&quot;&gt;&#10;                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;32&quot; height=&quot;32&quot; fill=&quot;#fff&quot; class=&quot;bi bi-person-circle&quot; viewBox=&quot;0 0 16 16&quot;&gt;&#10;                                &lt;path d=&quot;M13.468 12.37C12.758 11.226 11.383 10.5 8 10.5c-3.383 0-4.758.726-5.468 1.87A6.987 6.987 0 0 0 8 15a6.987 6.987 0 0 0 5.468-2.63z&quot;/&gt;&#10;                                &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M8 9a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm5-3a5 5 0 1 1-10 0 5 5 0 0 1 10 0z&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                        &lt;/a&gt;&#10;                        &lt;ul class=&quot;dropdown-menu dropdown-menu-end&quot; aria-labelledby=&quot;profileDropdown&quot;&gt;&#10;                            &lt;li&gt;&#10;                                &lt;a class=&quot;dropdown-item d-flex align-items-center&quot; href=&quot;#&quot;&gt;&#10;                                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; fill=&quot;darkblue&quot; class=&quot;bi bi-gear me-2&quot; viewBox=&quot;0 0 16 16&quot;&gt;&#10;                                        &lt;path d=&quot;M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z&quot;/&gt;&#10;                                        &lt;path d=&quot;M9.796 1.343c-.527-1.013-1.065-1.012-1.592 0l-.094.187a1.319 1.319 0 0 1-1.255.83c-1.07.09-1.342.507-1.342 1.23v.272c0 .723.272 1.14 1.342 1.23.52.044.98.316 1.255.83l.094.187c.527 1.013 1.065 1.012 1.592 0l.094-.187a1.319 1.319 0 0 1 1.255-.83c1.07-.09 1.342-.507 1.342-1.23v-.272c0-.723-.272-1.14-1.342-1.23a1.319 1.319 0 0 1-1.255-.83l-.094-.187zm-2.633.283c.246-.492.532-.492.778 0l.094.187a2.319 2.319 0 0 0 2.21 1.46c.723.09.995.507.995 1.23v.272c0 .723-.272 1.14-.995 1.23a2.319 2.319 0 0 0-2.21 1.46l-.094.187c-.246.492-.532.492-.778 0l-.094-.187a2.319 2.319 0 0 0-2.21-1.46c-.723-.09-.995-.507-.995-1.23v-.272c0-.723.272-1.14.995-1.23a2.319 2.319 0 0 0 2.21-1.46l.094-.187z&quot;/&gt;&#10;                                    &lt;/svg&gt;&#10;                                    Impostazioni&#10;                                &lt;/a&gt;&#10;                            &lt;/li&gt;&#10;                            &lt;li&gt;&#10;                                &lt;form method=&quot;post&quot; action=&quot;{% url 'logout' %}&quot; style=&quot;display: inline;&quot;&gt;&#10;                                    {% csrf_token %}&#10;                                    &lt;button type=&quot;submit&quot; class=&quot;dropdown-item d-flex align-items-center&quot;&gt;&#10;                                        &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; fill=&quot;darkblue&quot; class=&quot;bi bi-box-arrow-right me-2&quot; viewBox=&quot;0 0 16 16&quot;&gt;&#10;                                            &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M6 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1v-2a.5.5 0 0 1 1 0v2h6V3H7v2a.5.5 0 0 1-1 0V3z&quot;/&gt;&#10;                                            &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M.146 8.354a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L1.707 7.5H10.5a.5.5 0 0 1 0 1H1.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3z&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                        Disconnetti&#10;                                    &lt;/button&gt;&#10;                                &lt;/form&gt;&#10;                            &lt;/li&gt;&#10;                        &lt;/ul&gt;&#10;                    &lt;/div&gt;&#10;                {% else %}&#10;                    &lt;div class=&quot;d-flex align-items-center&quot; style=&quot;gap: 12px;&quot;&gt;&#10;                        &lt;a href=&quot;{% url 'login' %}&quot; class=&quot;btn btn-link btn-sm text-white fw-bold text-decoration-none&quot; style=&quot;color: white&quot;&gt;Accedi&lt;/a&gt;&#10;                        &lt;a href=&quot;{% url 'register' %}&quot; class=&quot;btn btn-link btn-sm text-white fw-bold text-decoration-none&quot; style=&quot;color: white&quot;&gt;Registrati&lt;/a&gt;&#10;                    &lt;/div&gt;&#10;                {% endif %}&#10;            &lt;/nav&gt;&#10;        &lt;/div&gt;&#10;    &lt;/header&gt;&#10;    &lt;main class=&quot;container-fluid mt-4 d-flex flex-column align-items-center justify-content-center&quot;&gt;&#10;        &lt;aside class=&quot;d-flex align-items-center justify-content-center w-100&quot; style=&quot;min-height: 1px;&quot;&gt;&#10;            &lt;div class=&quot;filter-section shadow-lg p-4 rounded-5 border-0 bg-white&quot; style=&quot;min-width:420px;max-width:900px;width:100%;&quot;&gt;&#10;                &lt;form method=&quot;get&quot;&gt;&#10;                    &lt;div class=&quot;row g-3 filter-grid&quot;&gt;&#10;                        {% for field in filter.form.visible_fields %}&#10;                            {% if field.name == 'disponibilita' %}&#10;                                &lt;div class=&quot;col filter-col&quot;&gt;&#10;                                    &lt;label for=&quot;{{ field.id_for_label }}&quot; class=&quot;form-label filter-label&quot;&gt;Disponibilità&lt;/label&gt;&#10;                                    &lt;select name=&quot;disponibilita&quot; id=&quot;{{ field.id_for_label }}&quot; class=&quot;form-select&quot;&gt;&#10;                                        &lt;option value=&quot;&quot;&gt;---------&lt;/option&gt;&#10;                                        {% for value, label in filter.disponibilita_choices %}&#10;                                            &lt;option value=&quot;{{ value }}&quot; {% if request.GET.disponibilita == value %}selected{% endif %}&gt;{{ label }}&lt;/option&gt;&#10;                                        {% endfor %}&#10;                                    &lt;/select&gt;&#10;                                &lt;/div&gt;&#10;                            {% else %}&#10;                                &lt;div class=&quot;col filter-col&quot;&gt;&#10;                                    &lt;label for=&quot;{{ field.id_for_label }}&quot; class=&quot;form-label filter-label&quot;&gt;{{ field.label }}&lt;/label&gt;&#10;                                    {{ field }}&#10;                                &lt;/div&gt;&#10;                            {% endif %}&#10;                        {% endfor %}&#10;                    &lt;/div&gt;&#10;                    &lt;button type=&quot;submit&quot; class=&quot;btn btn-custom w-100 mt-4 py-3 fs-5 shadow-sm&quot;&gt;Applica filtri&lt;/button&gt;&#10;                &lt;/form&gt;&#10;            &lt;/div&gt;&#10;        &lt;/aside&gt;&#10;        &lt;section class=&quot;col-lg-9 col-md-8 col-12&quot;&gt;&#10;            &lt;div class=&quot;car-list&quot;&gt;&#10;                &lt;div class=&quot;card-list&quot;&gt;&#10;                    {% for car in cars_page %}&#10;                    &lt;div class=&quot;card&quot;&gt;&#10;                        &lt;img src=&quot;{{ car.immagine.url }}&quot; class=&quot;card-img-top&quot; alt=&quot;{{ car.nome }}&quot;&gt;&#10;                        &lt;div class=&quot;card-body&quot;&gt;&#10;                            &lt;h5 class=&quot;card-title&quot;&gt;{{ car.marca }} {{ car.modello }}&lt;/h5&gt;&#10;                            &lt;p class=&quot;card-text&quot;&gt;Anno: {{ car.anno }}&lt;br&gt;&#10;                                {% with vendita=car.vendita.first %}&#10;                                    {% if vendita %}&#10;                                        Prezzo: €{{ vendita.prezzo_vendita }}&lt;br&gt;&#10;                                    {% endif %}&#10;                                {% endwith %}&#10;                                {% with affitto=car.affitto.first %}&#10;                                    {% if affitto %}&#10;                                        Prezzo Noleggio: €{{ affitto.prezzo_affitto }}/giorno&lt;br&gt;&#10;                                    {% endif %}&#10;                                {% endwith %}&#10;                            &lt;/p&gt;&#10;                            &lt;a href=&quot;{% url 'Auto:auto-detail' pk=car.id %}?next={{ request.get_full_path }}&quot; class=&quot;btn btn-custom&quot;&gt;Dettagli&lt;/a&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    {% endfor %}&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/section&gt;&#10;    &lt;/main&gt;&#10;    &lt;!-- Nuovo paginator orizzontale, centrato, senza pallini --&gt;&#10;    &lt;nav aria-label=&quot;Paginazione auto&quot; class=&quot;my-5&quot;&gt;&#10;        &lt;div class=&quot;d-flex justify-content-center&quot;&gt;&#10;            &lt;ul class=&quot;paginator-ul&quot;&gt;&#10;                {% if cars_page.has_previous %}&#10;                &lt;li&gt;&#10;                    &lt;a class=&quot;paginator-link&quot; href=&quot;?page={{ cars_page.previous_page_number }}&quot; aria-label=&quot;Pagina precedente&quot;&gt;&#10;                        &lt;span aria-hidden=&quot;true&quot;&gt;&amp;laquo;&lt;/span&gt;&#10;                    &lt;/a&gt;&#10;                &lt;/li&gt;&#10;                {% endif %}&#10;                {% for num in cars_page.paginator.page_range %}&#10;                &lt;li&gt;&#10;                    &lt;a class=&quot;paginator-link {% if cars_page.number == num %}paginator-link-active{% endif %}&quot; href=&quot;?page={{ num }}&quot;&gt;{{ num }}&lt;/a&gt;&#10;                &lt;/li&gt;&#10;                {% endfor %}&#10;                {% if cars_page.has_next %}&#10;                &lt;li&gt;&#10;                    &lt;a class=&quot;paginator-link&quot; href=&quot;?page={{ cars_page.next_page_number }}&quot; aria-label=&quot;Pagina successiva&quot;&gt;&#10;                        &lt;span aria-hidden=&quot;true&quot;&gt;&amp;raquo;&lt;/span&gt;&#10;                    &lt;/a&gt;&#10;                &lt;/li&gt;&#10;                {% endif %}&#10;            &lt;/ul&gt;&#10;        &lt;/div&gt;&#10;    &lt;/nav&gt;&#10;    &lt;footer&gt;&#10;        &lt;div style=&quot;text-align:center;&quot;&gt;&#10;            &lt;div style=&quot;margin-bottom: 10px;&quot;&gt;&#10;                &lt;a href=&quot;https://facebook.com&quot; target=&quot;_blank&quot; style=&quot;margin:0 8px;display:inline-block;&quot;&gt;&#10;                    &lt;img src=&quot;https://cdn.jsdelivr.net/gh/simple-icons/simple-icons/icons/facebook.svg&quot; alt=&quot;Facebook&quot; style=&quot;width:32px;height:32px;filter:grayscale(1);&quot;&gt;&#10;                &lt;/a&gt;&#10;                &lt;a href=&quot;https://wa.me/&quot; target=&quot;_blank&quot; style=&quot;margin:0 8px;display:inline-block;&quot;&gt;&#10;                    &lt;img src=&quot;https://cdn.jsdelivr.net/gh/simple-icons/simple-icons/icons/whatsapp.svg&quot; alt=&quot;WhatsApp&quot; style=&quot;width:32px;height:32px;filter:grayscale(1);&quot;&gt;&#10;                &lt;/a&gt;&#10;                &lt;a href=&quot;https://instagram.com&quot; target=&quot;_blank&quot; style=&quot;margin:0 8px;display:inline-block;&quot;&gt;&#10;                    &lt;img src=&quot;https://cdn.jsdelivr.net/gh/simple-icons/simple-icons/icons/instagram.svg&quot; alt=&quot;Instagram&quot; style=&quot;width:32px;height:32px;filter:grayscale(1);&quot;&gt;&#10;                &lt;/a&gt;&#10;                &lt;a href=&quot;mailto:info@autosaloonmodena.it&quot; target=&quot;_blank&quot; style=&quot;margin:0 8px;display:inline-block;&quot;&gt;&#10;                    &lt;img src=&quot;https://cdn.jsdelivr.net/gh/simple-icons/simple-icons/icons/gmail.svg&quot; alt=&quot;Gmail&quot; style=&quot;width:32px;height:32px;filter:grayscale(1);&quot;&gt;&#10;                &lt;/a&gt;&#10;                &lt;a href=&quot;https://linkedin.com&quot; target=&quot;_blank&quot; style=&quot;margin:0 8px;display:inline-block;&quot;&gt;&#10;                    &lt;img src=&quot;https://cdn.jsdelivr.net/gh/simple-icons/simple-icons/icons/linkedin.svg&quot; alt=&quot;LinkedIn&quot; style=&quot;width:32px;height:32px;filter:grayscale(1);&quot;&gt;&#10;                &lt;/a&gt;&#10;            &lt;/div&gt;&#10;            &lt;p&gt;&#10;                Copyright © 2025 AutoSalonModena S.p.A., società ad azionista unico sottoposta a direzione e coordinamento da parte della MutinaAutoSalon.&lt;br&gt;&#10;                Tutti i diritti riservati. P.IVA n. ???????????&#10;            &lt;/p&gt;&#10;        &lt;/div&gt;&#10;    &lt;/footer&gt;&#10;&lt;script src=&quot;{% static 'bootstrap/js/bootstrap.bundle.min.js' %}&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
              <option name="updatedContent" value="{% load static %}&#10;&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;it&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Concessionaria - Home&lt;/title&gt;&#10;    &lt;link rel=&quot;icon&quot; type=&quot;image/png&quot; href=&quot;{% static 'favicon.png' %}&quot;&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;{% static 'css/bootstrap.min.css' %}&quot;&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;{% static 'css/home_custom.css' %}&quot;&gt;&#10;    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Pacifico&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;&#10;    &lt;style&gt;&#10;        html, body {&#10;            height: 100%;&#10;        }&#10;        body {&#10;            min-height: 100vh;&#10;            display: flex;&#10;            flex-direction: column;&#10;            background-color: darkblue;&#10;        }&#10;        main {&#10;            flex: 1;&#10;        }&#10;        .am-logo-favicon {&#10;            font-family: 'Pacifico', cursive;&#10;            font-size: 2.1rem;&#10;            font-weight: bold;&#10;            color: #2563eb;&#10;            background: white;&#10;            border-radius: 50%;&#10;            width: 2.6rem;&#10;            height: 2.6rem;&#10;            display: flex;&#10;            align-items: center;&#10;            justify-content: center;&#10;            box-shadow: 0 2px 8px #2563eb33;&#10;            position: absolute;&#10;            left: 0.7rem;&#10;            top: 0.7rem;&#10;            z-index: 1000;&#10;        }&#10;        @media (max-width: 600px) {&#10;            .am-logo-favicon { font-size: 1.3rem; width: 1.7rem; height: 1.7rem; }&#10;        }&#10;    &lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&#10;    &lt;header&gt;&#10;        &lt;div class=&quot;header-custom d-flex justify-content-between align-items-center px-4 py-2&quot; style=&quot;gap: 24px; background-color: darkblue;&quot;&gt;&#10;            &lt;h1 class=&quot;header-title&quot; style=&quot;font-family: 'Pacifico', cursive; font-size:2.7rem; font-weight:900; letter-spacing:2px; color:#fff; text-shadow:2px 2px 8px #1e3a8a, 0 0 12px #2563eb; margin:0;&quot;&gt;&#10;                Autosaloon&lt;span style=&quot;color:#2563eb;&quot;&gt;Modena&lt;/span&gt;&#10;            &lt;/h1&gt;&#10;&#10;            &lt;nav class=&quot;d-flex align-items-center&quot; style=&quot;gap: 24px; flex-wrap: nowrap;&quot;&gt;&#10;                {% if user.is_authenticated %}&#10;                    {% if is_concessionaria %}&#10;                        &lt;a href=&quot;{% url 'Auto:user_autos' %}&quot; class=&quot;btn btn-outline-light btn-sm d-flex flex-column align-items-center justify-content-center&quot; style=&quot;width:70px; height:70px; border-radius:16px;&quot;&gt;&#10;                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;32&quot; height=&quot;32&quot; fill=&quot;#fff&quot; class=&quot;bi bi-car-front&quot; viewBox=&quot;0 0 16 16&quot;&gt;&#10;                                &lt;path d=&quot;M4 9a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm10 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z&quot;/&gt;&#10;                                &lt;path d=&quot;M16 8.5v-1c0-.966-.784-1.75-1.75-1.75h-.805l-.547-2.186A2.5 2.5 0 0 0 10.464 1H5.536a2.5 2.5 0 0 0-2.434 3.564l-.547 2.186h-.805A1.75 1.75 0 0 0 0 7.5v1c0 .456.154.877.414 1.215A2.5 2.5 0 0 0 2 13.5V14a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1v-1h6v1a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1v-.5a2.5 2.5 0 0 0 1.586-3.785A1.75 1.75 0 0 0 16 8.5zM5.536 2h4.928a1.5 1.5 0 0 1 1.46 1.964l-.5 2H4.58l-.5-2A1.5 1.5 0 0 1 5.536 2zM1 7.5c0-.414.336-.75.75-.75h12.5c.414 0 .75.336.75.75v1a.75.75 0 0 1-.75.75H1.75A.75.75 0 0 1 1 8.5v-1zm1.5 5A1.5 1.5 0 0 1 1.5 11h13a1.5 1.5 0 0 1-1.5 1.5h-10z&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span style=&quot;font-size:0.85rem; color: #fff;&quot;&gt;Le mie Auto&lt;/span&gt;&#10;                        &lt;/a&gt;&#10;                        &lt;span style=&quot;width:16px;&quot;&gt;&lt;/span&gt;&#10;                        &lt;a href=&quot;#&quot; class=&quot;btn btn-outline-light btn-sm d-flex flex-column align-items-center justify-content-center&quot; style=&quot;width:70px; height:70px; border-radius:16px;&quot;&gt;&#10;                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;32&quot; height=&quot;32&quot; fill=&quot;#fff&quot; class=&quot;bi bi-key&quot; viewBox=&quot;0 0 16 16&quot;&gt;&#10;                                &lt;path d=&quot;M3 8a5 5 0 1 1 9.584 2.5H15a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-1v1a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-1H8.5A5 5 0 0 1 3 8zm5-4a4 4 0 1 0 0 8 4 4 0 0 0 0-8z&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span style=&quot;font-size:0.85rem; color: #fff;&quot;&gt;Auto Affittate&lt;/span&gt;&#10;                        &lt;/a&gt;&#10;                        &lt;span style=&quot;width:16px;&quot;&gt;&lt;/span&gt;&#10;                        &lt;a href=&quot;#&quot; class=&quot;btn btn-outline-light btn-sm d-flex flex-column align-items-center justify-content-center&quot; style=&quot;width:70px; height:70px; border-radius:16px;&quot;&gt;&#10;                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;32&quot; height=&quot;32&quot; fill=&quot;#fff&quot; class=&quot;bi bi-calendar-check&quot; viewBox=&quot;0 0 16 16&quot;&gt;&#10;                                &lt;path d=&quot;M10.854 8.146a.5.5 0 0 0-.708.708l1 1a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L11.5 8.793l-.646-.647z&quot;/&gt;&#10;                                &lt;path d=&quot;M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM1 3v11a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1h-1v.5a.5.5 0 0 1-1 0V2H4v.5a.5.5 0 0 1-1 0V2H2a1 1 0 0 0-1 1z&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span style=&quot;font-size:0.85rem; color: #fff;&quot;&gt;Auto Prenotate&lt;/span&gt;&#10;                        &lt;/a&gt;&#10;                        &lt;span style=&quot;width:16px;&quot;&gt;&lt;/span&gt;&#10;                        &lt;a href=&quot;#&quot; class=&quot;btn btn-outline-light btn-sm d-flex flex-column align-items-center justify-content-center&quot; style=&quot;width:70px; height:70px; border-radius:16px;&quot;&gt;&#10;                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;32&quot; height=&quot;32&quot; fill=&quot;#fff&quot; class=&quot;bi bi-handshake&quot; viewBox=&quot;0 0 16 16&quot;&gt;&#10;                                &lt;path d=&quot;M8.354 1.646a.5.5 0 0 1 .707 0l5.293 5.293a.5.5 0 0 1 0 .707l-5.293 5.293a.5.5 0 0 1-.707 0L2.354 7.646a.5.5 0 0 1 0-.707L7.646 1.646a.5.5 0 0 1 .708 0z&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span style=&quot;font-size:0.85rem; color: #fff;&quot;&gt;Auto in Contrattazione&lt;/span&gt;&#10;                        &lt;/a&gt;&#10;                    {% elif is_user %}&#10;                        &lt;a href=&quot;{% url 'Auto:user_autos' %}&quot; class=&quot;btn btn-outline-light btn-sm d-flex flex-column align-items-center justify-content-center&quot; style=&quot;width:70px; height:70px; border-radius:16px;&quot;&gt;&#10;                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;32&quot; height=&quot;32&quot; fill=&quot;#fff&quot; class=&quot;bi bi-car-front&quot; viewBox=&quot;0 0 16 16&quot;&gt;&#10;                                &lt;path d=&quot;M4 9a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm10 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z&quot;/&gt;&#10;                                &lt;path d=&quot;M16 8.5v-1c0-.966-.784-1.75-1.75-1.75h-.805l-.547-2.186A2.5 2.5 0 0 0 10.464 1H5.536a2.5 2.5 0 0 0-2.434 3.564l-.547 2.186h-.805A1.75 1.75 0 0 0 0 7.5v1c0 .456.154.877.414 1.215A2.5 2.5 0 0 0 2 13.5V14a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1v-1h6v1a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1v-.5a2.5 2.5 0 0 0 1.586-3.785A1.75 1.75 0 0 0 16 8.5zM5.536 2h4.928a1.5 1.5 0 0 1 1.46 1.964l-.5 2H4.58l-.5-2A1.5 1.5 0 0 1 5.536 2zM1 7.5c0-.414.336-.75.75-.75h12.5c.414 0 .75.336.75.75v1a.75.75 0 0 1-.75.75H1.75A.75.75 0 0 1 1 8.5v-1zm1.5 5A1.5 1.5 0 0 1 1.5 11h13a1.5 1.5 0 0 1-1.5 1.5h-10z&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span style=&quot;font-size:0.85rem; color: #fff;&quot;&gt;Le mie Auto&lt;/span&gt;&#10;                        &lt;/a&gt;&#10;                        &lt;span style=&quot;width:16px;&quot;&gt;&lt;/span&gt;&#10;                        &lt;a href=&quot;#&quot; class=&quot;btn btn-outline-light btn-sm d-flex flex-column align-items-center justify-content-center&quot; style=&quot;width:70px; height:70px; border-radius:16px;&quot;&gt;&#10;                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;32&quot; height=&quot;32&quot; fill=&quot;#fff&quot; class=&quot;bi bi-calendar-check&quot; viewBox=&quot;0 0 16 16&quot;&gt;&#10;                                &lt;path d=&quot;M10.854 8.146a.5.5 0 0 0-.708.708l1 1a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L11.5 8.793l-.646-.647z&quot;/&gt;&#10;                                &lt;path d=&quot;M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM1 3v11a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1h-1v.5a.5.5 0 0 1-1 0V2H4v.5a.5.5 0 0 1-1 0V2H2a1 1 0 0 0-1 1z&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;span style=&quot;font-size:0.85rem; color: #fff;&quot;&gt;Auto Affittate/Prenotate&lt;/span&gt;&#10;                        &lt;/a&gt;&#10;                    {% endif %}&#10;                {% endif %}&#10;                {% if user.is_authenticated %}&#10;                    &lt;div class=&quot;dropdown&quot;&gt;&#10;                        &lt;a href=&quot;#&quot; class=&quot;btn btn-link btn-sm text-white fw-bold text-decoration-none dropdown-toggle&quot; id=&quot;profileDropdown&quot; data-bs-toggle=&quot;dropdown&quot; aria-expanded=&quot;false&quot;&gt;&#10;                            &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;32&quot; height=&quot;32&quot; fill=&quot;#fff&quot; class=&quot;bi bi-person-circle&quot; viewBox=&quot;0 0 16 16&quot;&gt;&#10;                                &lt;path d=&quot;M13.468 12.37C12.758 11.226 11.383 10.5 8 10.5c-3.383 0-4.758.726-5.468 1.87A6.987 6.987 0 0 0 8 15a6.987 6.987 0 0 0 5.468-2.63z&quot;/&gt;&#10;                                &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M8 9a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm5-3a5 5 0 1 1-10 0 5 5 0 0 1 10 0z&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                        &lt;/a&gt;&#10;                        &lt;ul class=&quot;dropdown-menu dropdown-menu-end&quot; aria-labelledby=&quot;profileDropdown&quot;&gt;&#10;                            &lt;li&gt;&#10;                                &lt;a class=&quot;dropdown-item d-flex align-items-center&quot; href=&quot;#&quot;&gt;&#10;                                    &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; fill=&quot;darkblue&quot; class=&quot;bi bi-gear me-2&quot; viewBox=&quot;0 0 16 16&quot;&gt;&#10;                                        &lt;path d=&quot;M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z&quot;/&gt;&#10;                                        &lt;path d=&quot;M9.796 1.343c-.527-1.013-1.065-1.012-1.592 0l-.094.187a1.319 1.319 0 0 1-1.255.83c-1.07.09-1.342.507-1.342 1.23v.272c0 .723.272 1.14 1.342 1.23.52.044.98.316 1.255.83l.094.187c.527 1.013 1.065 1.012 1.592 0l.094-.187a1.319 1.319 0 0 1 1.255-.83c1.07-.09 1.342-.507 1.342-1.23v-.272c0-.723-.272-1.14-1.342-1.23a1.319 1.319 0 0 1-1.255-.83l-.094-.187zm-2.633.283c.246-.492.532-.492.778 0l.094.187a2.319 2.319 0 0 0 2.21 1.46c.723.09.995.507.995 1.23v.272c0 .723-.272 1.14-.995 1.23a2.319 2.319 0 0 0-2.21 1.46l-.094.187c-.246.492-.532.492-.778 0l-.094-.187a2.319 2.319 0 0 0-2.21-1.46c-.723-.09-.995-.507-.995-1.23v-.272c0-.723.272-1.14.995-1.23a2.319 2.319 0 0 0 2.21-1.46l.094-.187z&quot;/&gt;&#10;                                    &lt;/svg&gt;&#10;                                    Impostazioni&#10;                                &lt;/a&gt;&#10;                            &lt;/li&gt;&#10;                            &lt;li&gt;&#10;                                &lt;form method=&quot;post&quot; action=&quot;{% url 'logout' %}&quot; style=&quot;display: inline;&quot;&gt;&#10;                                    {% csrf_token %}&#10;                                    &lt;button type=&quot;submit&quot; class=&quot;dropdown-item d-flex align-items-center&quot;&gt;&#10;                                        &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; fill=&quot;darkblue&quot; class=&quot;bi bi-box-arrow-right me-2&quot; viewBox=&quot;0 0 16 16&quot;&gt;&#10;                                            &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M6 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1v-2a.5.5 0 0 1 1 0v2h6V3H7v2a.5.5 0 0 1-1 0V3z&quot;/&gt;&#10;                                            &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M.146 8.354a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L1.707 7.5H10.5a.5.5 0 0 1 0 1H1.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3z&quot;/&gt;&#10;                                        &lt;/svg&gt;&#10;                                        Disconnetti&#10;                                    &lt;/button&gt;&#10;                                &lt;/form&gt;&#10;                            &lt;/li&gt;&#10;                        &lt;/ul&gt;&#10;                    &lt;/div&gt;&#10;                {% else %}&#10;                    &lt;div class=&quot;d-flex align-items-center&quot; style=&quot;gap: 12px;&quot;&gt;&#10;                        &lt;a href=&quot;{% url 'login' %}&quot; class=&quot;btn btn-link btn-sm text-white fw-bold text-decoration-none&quot; style=&quot;color: white&quot;&gt;Accedi&lt;/a&gt;&#10;                        &lt;a href=&quot;{% url 'register' %}&quot; class=&quot;btn btn-link btn-sm text-white fw-bold text-decoration-none&quot; style=&quot;color: white&quot;&gt;Registrati&lt;/a&gt;&#10;                    &lt;/div&gt;&#10;                {% endif %}&#10;            &lt;/nav&gt;&#10;        &lt;/div&gt;&#10;    &lt;/header&gt;&#10;    &lt;main class=&quot;container-fluid mt-4 d-flex flex-column align-items-center justify-content-center&quot;&gt;&#10;        &lt;aside class=&quot;d-flex align-items-center justify-content-center w-100&quot; style=&quot;min-height: 1px;&quot;&gt;&#10;            &lt;div class=&quot;filter-section shadow-lg p-4 rounded-5 border-0 bg-white&quot; style=&quot;min-width:420px;max-width:900px;width:100%;&quot;&gt;&#10;                &lt;form method=&quot;get&quot;&gt;&#10;                    &lt;div class=&quot;row g-3 filter-grid&quot;&gt;&#10;                        {% for field in filter.form.visible_fields %}&#10;                            {% if field.name == 'disponibilita' %}&#10;                                &lt;div class=&quot;col filter-col&quot;&gt;&#10;                                    &lt;label for=&quot;{{ field.id_for_label }}&quot; class=&quot;form-label filter-label&quot;&gt;Disponibilità&lt;/label&gt;&#10;                                    {{ field }}&#10;                                &lt;/div&gt;&#10;                            {% else %}&#10;                                &lt;div class=&quot;col filter-col&quot;&gt;&#10;                                    &lt;label for=&quot;{{ field.id_for_label }}&quot; class=&quot;form-label filter-label&quot;&gt;{{ field.label }}&lt;/label&gt;&#10;                                    {{ field }}&#10;                                &lt;/div&gt;&#10;                            {% endif %}&#10;                        {% endfor %}&#10;                    &lt;/div&gt;&#10;                    &lt;button type=&quot;submit&quot; class=&quot;btn btn-custom w-100 mt-4 py-3 fs-5 shadow-sm&quot;&gt;Applica filtri&lt;/button&gt;&#10;                &lt;/form&gt;&#10;            &lt;/div&gt;&#10;        &lt;/aside&gt;&#10;        &lt;section class=&quot;col-lg-9 col-md-8 col-12&quot;&gt;&#10;            &lt;div class=&quot;car-list&quot;&gt;&#10;                &lt;div class=&quot;card-list&quot;&gt;&#10;                    {% for car in cars_page %}&#10;                    &lt;div class=&quot;card&quot;&gt;&#10;                        &lt;img src=&quot;{{ car.immagine.url }}&quot; class=&quot;card-img-top&quot; alt=&quot;{{ car.nome }}&quot;&gt;&#10;                        &lt;div class=&quot;card-body&quot;&gt;&#10;                            &lt;h5 class=&quot;card-title&quot;&gt;{{ car.marca }} {{ car.modello }}&lt;/h5&gt;&#10;                            &lt;p class=&quot;card-text&quot;&gt;Anno: {{ car.anno }}&lt;br&gt;&#10;                                {% with vendita=car.vendita.first %}&#10;                                    {% if vendita %}&#10;                                        Prezzo: €{{ vendita.prezzo_vendita }}&lt;br&gt;&#10;                                    {% endif %}&#10;                                {% endwith %}&#10;                                {% with affitto=car.affitto.first %}&#10;                                    {% if affitto %}&#10;                                        Prezzo Noleggio: €{{ affitto.prezzo_affitto }}/giorno&lt;br&gt;&#10;                                    {% endif %}&#10;                                {% endwith %}&#10;                            &lt;/p&gt;&#10;                            &lt;a href=&quot;{% url 'Auto:auto-detail' pk=car.id %}?next={{ request.get_full_path }}&quot; class=&quot;btn btn-custom&quot;&gt;Dettagli&lt;/a&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    {% endfor %}&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/section&gt;&#10;    &lt;/main&gt;&#10;    &lt;!-- Nuovo paginator orizzontale, centrato, senza pallini --&gt;&#10;    &lt;nav aria-label=&quot;Paginazione auto&quot; class=&quot;my-5&quot;&gt;&#10;        &lt;div class=&quot;d-flex justify-content-center&quot;&gt;&#10;            &lt;ul class=&quot;paginator-ul&quot;&gt;&#10;                {% if cars_page.has_previous %}&#10;                &lt;li&gt;&#10;                    &lt;a class=&quot;paginator-link&quot; href=&quot;?page={{ cars_page.previous_page_number }}&quot; aria-label=&quot;Pagina precedente&quot;&gt;&#10;                        &lt;span aria-hidden=&quot;true&quot;&gt;&amp;laquo;&lt;/span&gt;&#10;                    &lt;/a&gt;&#10;                &lt;/li&gt;&#10;                {% endif %}&#10;                {% for num in cars_page.paginator.page_range %}&#10;                &lt;li&gt;&#10;                    &lt;a class=&quot;paginator-link {% if cars_page.number == num %}paginator-link-active{% endif %}&quot; href=&quot;?page={{ num }}&quot;&gt;{{ num }}&lt;/a&gt;&#10;                &lt;/li&gt;&#10;                {% endfor %}&#10;                {% if cars_page.has_next %}&#10;                &lt;li&gt;&#10;                    &lt;a class=&quot;paginator-link&quot; href=&quot;?page={{ cars_page.next_page_number }}&quot; aria-label=&quot;Pagina successiva&quot;&gt;&#10;                        &lt;span aria-hidden=&quot;true&quot;&gt;&amp;raquo;&lt;/span&gt;&#10;                    &lt;/a&gt;&#10;                &lt;/li&gt;&#10;                {% endif %}&#10;            &lt;/ul&gt;&#10;        &lt;/div&gt;&#10;    &lt;/nav&gt;&#10;    &lt;footer&gt;&#10;        &lt;div style=&quot;text-align:center;&quot;&gt;&#10;            &lt;div style=&quot;margin-bottom: 10px;&quot;&gt;&#10;                &lt;a href=&quot;https://facebook.com&quot; target=&quot;_blank&quot; style=&quot;margin:0 8px;display:inline-block;&quot;&gt;&#10;                    &lt;img src=&quot;https://cdn.jsdelivr.net/gh/simple-icons/simple-icons/icons/facebook.svg&quot; alt=&quot;Facebook&quot; style=&quot;width:32px;height:32px;filter:grayscale(1);&quot;&gt;&#10;                &lt;/a&gt;&#10;                &lt;a href=&quot;https://wa.me/&quot; target=&quot;_blank&quot; style=&quot;margin:0 8px;display:inline-block;&quot;&gt;&#10;                    &lt;img src=&quot;https://cdn.jsdelivr.net/gh/simple-icons/simple-icons/icons/whatsapp.svg&quot; alt=&quot;WhatsApp&quot; style=&quot;width:32px;height:32px;filter:grayscale(1);&quot;&gt;&#10;                &lt;/a&gt;&#10;                &lt;a href=&quot;https://instagram.com&quot; target=&quot;_blank&quot; style=&quot;margin:0 8px;display:inline-block;&quot;&gt;&#10;                    &lt;img src=&quot;https://cdn.jsdelivr.net/gh/simple-icons/simple-icons/icons/instagram.svg&quot; alt=&quot;Instagram&quot; style=&quot;width:32px;height:32px;filter:grayscale(1);&quot;&gt;&#10;                &lt;/a&gt;&#10;                &lt;a href=&quot;mailto:info@autosaloonmodena.it&quot; target=&quot;_blank&quot; style=&quot;margin:0 8px;display:inline-block;&quot;&gt;&#10;                    &lt;img src=&quot;https://cdn.jsdelivr.net/gh/simple-icons/simple-icons/icons/gmail.svg&quot; alt=&quot;Gmail&quot; style=&quot;width:32px;height:32px;filter:grayscale(1);&quot;&gt;&#10;                &lt;/a&gt;&#10;                &lt;a href=&quot;https://linkedin.com&quot; target=&quot;_blank&quot; style=&quot;margin:0 8px;display:inline-block;&quot;&gt;&#10;                    &lt;img src=&quot;https://cdn.jsdelivr.net/gh/simple-icons/simple-icons/icons/linkedin.svg&quot; alt=&quot;LinkedIn&quot; style=&quot;width:32px;height:32px;filter:grayscale(1);&quot;&gt;&#10;                &lt;/a&gt;&#10;            &lt;/div&gt;&#10;            &lt;p&gt;&#10;                Copyright © 2025 AutoSalonModena S.p.A., società ad azionista unico sottoposta a direzione e coordinamento da parte della MutinaAutoSalon.&lt;br&gt;&#10;                Tutti i diritti riservati. P.IVA n. ???????????&#10;            &lt;/p&gt;&#10;        &lt;/div&gt;&#10;    &lt;/footer&gt;&#10;&lt;script src=&quot;{% static 'bootstrap/js/bootstrap.bundle.min.js' %}&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/Drusi/Progetto_TecWeb/Autosaloon_Modena/apps/Auto/views.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Drusi/Progetto_TecWeb/Autosaloon_Modena/apps/Auto/views.py" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/templates/Auto/user_autos.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/templates/Auto/user_autos.html" />
              <option name="originalContent" value="&#10;&#10;&#10;" />
              <option name="updatedContent" value="{% extends 'base.html' %}&#10;&#10;{% block content %}&#10;&#10;                    &lt;a href=&quot;{% url 'Auto:edit_auto' auto.pk %}&quot; class=&quot;btn btn-primary btn-sm&quot;&gt;Modifica&lt;/a&gt;&#10;                    &lt;form method=&quot;post&quot; action=&quot;{% url 'Auto:delete_auto' auto.pk %}&quot; style=&quot;display:inline;&quot;&gt;&#10;                        {% csrf_token %}&#10;                        &lt;button type=&quot;button&quot; class=&quot;btn btn-danger btn-sm delete-auto-btn&quot;&gt;Elimina&lt;/button&gt;&#10;                    &lt;/form&gt;&#10;                &lt;/td&gt;&#10;            &lt;/tr&gt;&#10;            {% endfor %}&#10;        &lt;/tbody&gt;&#10;    &lt;/table&gt;&#10;&lt;/div&gt;&#10;&#10;{% include 'Autosalone/confirm_delete_popup.html' %}&#10;&lt;script&gt;&#10;document.addEventListener('DOMContentLoaded', function() {&#10;    let formToDelete = null;&#10;    document.querySelectorAll('.delete-auto-btn').forEach(function(btn) {&#10;        btn.addEventListener('click', function(e) {&#10;            e.preventDefault();&#10;            formToDelete = btn.closest('form');&#10;            var modal = new bootstrap.Modal(document.getElementById('confirmDeleteModal'));&#10;            var confirmBtn = document.getElementById('confirmDeleteBtn');&#10;            confirmBtn.onclick = function() {&#10;                if(formToDelete) formToDelete.submit();&#10;                modal.hide();&#10;            };&#10;            modal.show();&#10;        });&#10;    });&#10;});&#10;&lt;/script&gt;&#10;{% endblock %}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/templates/Autosalone/confirm_delete_popup.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/templates/Autosalone/confirm_delete_popup.html" />
              <option name="updatedContent" value="&lt;!-- Popup di conferma eliminazione generico e riutilizzabile --&gt;&#10;&lt;div class=&quot;modal fade&quot; id=&quot;confirmDeleteModal&quot; tabindex=&quot;-1&quot; aria-labelledby=&quot;confirmDeleteModalLabel&quot; aria-hidden=&quot;true&quot;&gt;&#10;  &lt;div class=&quot;modal-dialog modal-dialog-centered&quot;&gt;&#10;    &lt;div class=&quot;modal-content&quot;&gt;&#10;      &lt;div class=&quot;modal-header&quot;&gt;&#10;        &lt;h5 class=&quot;modal-title&quot; id=&quot;confirmDeleteModalLabel&quot;&gt;Conferma eliminazione&lt;/h5&gt;&#10;        &lt;button type=&quot;button&quot; class=&quot;btn-close&quot; data-bs-dismiss=&quot;modal&quot; aria-label=&quot;Chiudi&quot;&gt;&lt;/button&gt;&#10;      &lt;/div&gt;&#10;      &lt;div class=&quot;modal-body&quot;&gt;&#10;        Sei sicuro di voler eliminare questo elemento? Questa azione non può essere annullata.&#10;      &lt;/div&gt;&#10;      &lt;div class=&quot;modal-footer&quot;&gt;&#10;        &lt;button type=&quot;button&quot; class=&quot;btn btn-secondary&quot; data-bs-dismiss=&quot;modal&quot;&gt;Annulla&lt;/button&gt;&#10;        &lt;button type=&quot;button&quot; class=&quot;btn btn-danger&quot; id=&quot;confirmDeleteBtn&quot;&gt;Elimina&lt;/button&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  &lt;/div&gt;&#10;&lt;/div&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/templates/base.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/templates/base.html" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>